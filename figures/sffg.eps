%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: sffg.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: mayrock
%%CreationDate: 2013/5/9, 10:45:50
%%BoundingBox: 0 0 556 353
%%HiResBoundingBox: 0 0 555.3075 352.6301
%%CropBox: 0 0 555.3075 352.6301
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1146 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2012-09-29T22:31:28+08:00"
   xmp:CreatorTool="docPrint PDF Driver v2.1 - Build: Oct 16 2009"
   xmp:ModifyDate="2012-09-29T22:39:30+08:00"
   xmp:MetadataDate="2012-09-29T22:39:30+08:00"
   pdf:Producer="docPrint PDF Driver (http://www.verypdf.com/artprint/index.html)"
   xmpMM:DocumentID="uuid:ddca1af7-2084-437b-833a-ae66c1b1e56d"
   xmpMM:InstanceID="uuid:f6cff046-6bd2-440e-ba64-de8713675a5d">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>mayrock</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">(Visio-\273\346\315\2742.vsd)</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -352.63 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 352.63 li
555.307 352.63 li
555.307 0 li
cp
clp
[1 0 0 1 -28.3465 0 ]ct
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.749 sep
%%IncludeResource: font Times-Roman
/NJDRFS+Times-Roman /Times-Roman findfont ct_VMDictPut
/NJDRFS+Times-Roman*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero 4{/.notdef}rp /five 13{/.notdef}rp /C /D 11{/.notdef}rp /P 
3{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]
NJDRFS+Times-Roman nf
NJDRFS+Times-Roman*1 [12 0 0 -12 0 0 ]msf
170 -213.772 mo
(Trial ve) false chp
207.655 -213.772 mo
(rsion of D) false chp
256.315 -213.772 mo
(ocume) false chp
288.307 -213.772 mo
(nt Conve) false chp
331.974 -213.772 mo
(rter \(doc) false chp
372.954 -213.772 mo
(Print Pro\) v5.0) false chp
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
@
.522672 lw
1 lc
1 lj
323.04 82.2281 mo
377.88 198.628 li
/1 
[/DeviceCMYK] /CSA add_res
.750179 .679652 .670191 .901488 cmyk
@
164.52 204.508 mo
164.52 192.268 174.48 182.308 186.72 182.308 cv
198.96 182.308 208.92 192.268 208.92 204.508 cv
208.92 216.748 198.96 226.708 186.72 226.708 cv
174.48 226.708 164.52 216.748 164.52 204.508 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
164.52 204.508 mo
164.52 192.268 174.48 182.308 186.72 182.308 cv
198.96 182.308 208.92 192.268 208.92 204.508 cv
208.92 216.748 198.96 226.708 186.72 226.708 cv
174.48 226.708 164.52 216.748 164.52 204.508 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
177 200.788 mo
188.52 200.788 li
188.52 236.068 li
177 236.068 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -35.28 148.654 151.842 ]ct
<<
/T 1
/W 96 
/H 294 
/M[96 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&]Dqs;JG0$E#Jg'6!=.QW!!*>opAb4!q"Xml
!!!9%pAb4!rq?Bn#QOMu!XJaUp](@#s1nC0!XJb`p](@+s7#d`!Y>>+p](@+s8;Wl!Y>>1p](F-s8N'!
q>^U.s8RWF!!<c3s1nF1!tYG3i;!?T&-)Cnq#CL-s7?$]!!<c3nbDn[!tYG$r:p<p&-).uq#CL-s6tO6
!!Ei4n3;I"!!Ei4n/oIB!!Ei4i"+cB!!FDDi!8cJ!!FDDhuiKF!!FDDhuWWL!!FDDhuWcP!!FDDhuNcQ
!!FDDhuJ9'!!OJEhuGulqZ$dAs53l!JGT<N+917!&&82C!!OJEhuF;GqZ$dAs53k^nG<1h+917!"8M`n
"[E%F!!E#n!!PUehuEfUqZ$das53kWrqc[!5QAM!!.XkG"[E%&!!%NG!!Y[f^]4@!JG]BO5QAM!!$B#S
!!,=a"Mb!;&)d?c#!`.'!!!Pfqu?pcs1eU7#OqWk#(QZg!!!,rqu?qNs1eU7"8r&s#(QZg!!!&tqu?eJ
s1nU6!<2lr!e:6crVuqJqu?eJs+((K!.XnH!e:6#rVus`JGfHLs8RWK!!46m!<)s"s8RWK!!+1Wr;Zp!
s+((K!>",e!!<3#JGoNL#N5O\!rr:NrVus(nGN=gs8RWK!!*2kr;cltr;Zj#q#16p!WW2u!!*,urW!!#
s8W#t!<N,t!!33$s82isrr)m!!WW2t!!*#t!!E?&rr<&u!!*&u!!39&s82isJ,TEL"98Au!![q'!!!-$
rqla#It.M!"98Au!![q'!!!9(rqla#J%u$a#QOf$!![qg!!!9(r;6O!J%u$a#QO`"!![r2!!!Q0r;6O!
s53kW&-)S+!!E?&huE`Y&-)S+!!`W+huEa!s7lNm#7(:u!!",@q#(0t+91g1!'gMYr;['es6p!g5QCNW
!!e#Rn,NH<s7#se#QOhn!!%NKnGWCn!WW2h!!*'!nGWCn!WW2h!!3-"nGWCn"98DjE"E!Ki;N]Z"98Dj
J,]HJi;N]V!s8N&i;NZUi;N]Y"98DZrVll5rW!''s8V"!rr2u6rW!'%s8Tk7rr2u6rW!3)s8RTL#QOgS
r;cltrW!!As+(%J!It+I!!*&s!!,=^r;Zg&qu?d'huJ9~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: PBAAAA+TimesNewRoman Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+TimesNewRoman
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200221e73700000124000007e06670676d734aa71b000009040000066a
676c79660000000000003e3c000007a668656164e1a7b37300000f700000
003668686561134d174b00000fa800000024686d74780000000000000fcc
0000005c6c6f6361000000000000102800001e686d6178701616089d0000
2e90000000206e616d650000000000002eb000000021707265701bb53ff7
00002ed400000f6867646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025008b04660230006900290016012f0080005c059f03d703f104704042
5554403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b017
7ae41b21b0177ae45959182d2cb0022546608a46b040618c482d2c4b5320
5c58b002855958b00185592d2c20b0032545b019234445b01a2344456523
4520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a
40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940
201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f
4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f4323
43650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003
252349b04060b0206320b000525823b002253823b002256538008a63381b
212121212159012d2c4bb06451584569b00943608a103a1b212110592d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3e
b02a2a2d2c352d2c76b802b023701020b802b04520b0005058b00161593a
2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015
b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b
515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53
234b515a58381b2121592d2c4b5458381b2121592d2c014b53234b515ab0
0225b00425b006254923451869525a58b00225b00225b005254623456960
48592121212d2cb0134358031b02592d2cb0134358021b03592d2c4b54b0
12435c5a58381b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b01060482046b0106048590a21211b
2121592d2cb012435c580cb00425b00425060c6423646164b807085158b0
0425b00425012046b8fff060482046b8fff06048590a21211b2121592d2c
4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b212159
2d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b0042602
4b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a462320468a
608a61b8ff8062232010238ab9035803588a70456020b0005058b00161b8
ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140018853
5a58b910000020885458b202010243604259b12401885158b92000004088
5458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b8
0100885458b202080243604259b94000010063b80200885458b202100243
604259b12601885158b94000020063b80400885458b202400243604259b9
4000040063b80800885458b202800243604259b12801885158b940000800
63b81000885458ba000201000002436042595959595959592d2cb0024354
584b53234b515a58381b2121591b21212121592d0000000100000006cf5c
b1b0afba5f0f3cf50819080000000000a2e31dc200000000cbc07b7afb74
fd8c105e0851000000090001000000000000000100000721fe4500571000
fb74f9d2105e0001000000000000000000000000000000150639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c040000f0002c0053002000620000003b
003b003b003b003b003b003b003b003b003b003b003b003b003b003b003b
003b003b003b003b00ad01950284030d03d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d303d303d303d303d303d303d303d303d303d303d3
03d303d303d303d303d3000100000f3302b5003c00ca000700020010002f
005600000634ffff000500020000000100120002000200000006000f0000
54696d6573204e657720526f6d616e000000410a005403ef02ad001d001f
03ee03ed003c001f03edb2061d1fb803ecb3032a1f3f411503e4006003e9
009f03e500df03e50004001003e4001003e5003f03e5007003e400ff03e4
0005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003
e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb24242
32b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de0002
03de03df0028001fffc003dfb3282e32f0410d03df0001037e000f010100
1f00a003dd00b003dd0002004003dab32426329fbf03cc000103ca03c900
64001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fff
c003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d
0004006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f
03a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5
008f03a50004005403aa0001006b03aa000103a8036a0022001f038c0394
0015001f038b03930015001f03a40393001a001f03a20394001e001f03a1
0393001e001f039f0394001e001f039b0394001a001f039a0393001e001f
039903940016001f039803940016001f03970393001b001f03960394001b
001f03950393001b001f03760375001a001f03740375001a001f03a00373
b21e1f10411e039300200393003003930003002003940030039400400394
00030000039400010383036c001e001f03b1036c0032001f036d036c0032
001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0
037d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c
00b0037c00c0037c00d0037c000400300373004003730002000003730010
037300200373000300e0037300f00373000200b0037300c0037300d00373
0003008403730090037300a0037300030377036a0029001f0389036ab228
1f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100
400366b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100
400365b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b
036300020014036300240363003403630044036300040363b2242f1fba03
4e006d0800400e1f7f027f037f047f050430440112bf033200500800001f
0012032d003c080040291f5f3c0137600970098009031009200930094009
5009056f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ff
c04047063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006
3006400650066006700680069006a006099006900702600b700b800b0310
0b200b300b400b500b051f0701a041850362000100000362001003620070
036200900362000400f0035f00010020035e0020035f0030035f0040035e
00040000035e0000035f0010035f00d0035e00e0035f00050010030f0020
030f0030030f00d0030f00e0030f00050000030f0010030f0050030f0060
030f0070030f00d0030f00060000030f0010030f0020030f0030030f00e0
030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e
0002030e004a00e0030d00f0030d0002030d002700d002fc0001001002fc
002002fc005002fc000300d002fc00e002fc0002000002fc001002fc0020
02fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc
003002fc004002fc000302fc406127c02901b02901a02901902901403c3f
413240223f41321212125f235f255f285fa5046f236f256f286fa5044f23
4f254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f
281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8
ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02
af00df02af0003001f02af002f02af003f02af006f02af000402af02af00
1f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02
ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad000200
0f02ad001f02ad003f02ad0003004002acb23a334f414d02ac005f02ac00
9f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300
b002ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02
ac003f02ac0003000f02ac0001000f035a0001000f035a001f035a003f03
5a005f035a0070035a000500cf035700df03570002000f0357001f035700
70035700af03570004035a035a0357035702ad02ad02ac02ac032c400d31
151f001616000000121108104110020c004a000d01a8004a000d0198004a
000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d27
4a0dbe02280041000d01940041000d0121400b410db4410d4f410d29410d
411002170021000d02150021000d02060021000d01eb0021000d014e0021
000d012c4014210df9210df3210df1210d9d210d71210d3d210d4110021c
001f000d0214001f000d020b001f000d0196001f000d014a001f000d0126
400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e01
41000d001b0141000d01f2b40f440f0009bb01f20044000d0201b23c291f
b80200b23c291fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801
fab23c931fbc01f9010f0101001f01f6b224e41f411501f401490401001f
01f301490401001f01f1014900ab001f01f001490067001f01a6003c0125
001f01a4b23c811f411501a3010f019a001f01a200220801001f01a10050
0401001f019f0149019a001f019d01490067001f019cb22c621fb8019bb2
2c791fbc019a002c0101001f0197b22ce41fb80193b22c891fb80192b22c
6c1fb8018fb2259e1fb8016ab23c2a1f4111016700240201001f01630025
02ab001f014c010f019a001f01480149006c001f0147b22c891fb80145b2
2c9e1fb80144b22c791fb80143b223311fb80127b23c811fbc0123005001
01001f011fb223e41f4115011d0023019a001f011c00230801001f011b00
250801001f010e010f0401001f010d00220401001f0108b223811fb80106
b425e41ff73cbb0125001f00f5010fb29e1fe3bc01490156001f00e20149
b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc0
2cb80801b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad
23b80801b21fa523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f81
2cbc0401001f006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f
403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f
3025b802abb61f2a24e41f2623b80156b21f5537ba023500070175402c07
74076207560751073b0733072d0720071d071c071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4bb0
08505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0
124358b90001012f858d1bb90001017c858d5959014bb0c063004b6220b0
f65323b8010a515ab0052342180016763f183f123e113946443e11394644
3e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b
2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b032
4b5358b0ff1d594bb04753205c58b90271026f4544b90270026f45445958
b9017a0271455258b90271017a4459594bb04753205c58b9002202704544
b9003c027045445958b901b30022455258b9002201b34459594bb04c5320
5c58b9014900224544b1222245445958b901c20149455258b9014901c244
59594bb06753205c58b9002402714544b90050027145445958b9021e0024
455258b90024021e4459594bb8020153205c58b9010f00224544b1222245
445958b90c00010f455258b9010f0c004459594bb01c53205c58b1252545
44b12c2545445958b13725455258b125374459594bb0ab53205c58b12525
4544b1232545445958b901590025455258b9002501594459594bb8010153
205c58b125254544b1282545445958b902080025455258b9002502084459
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b01b361dc6463456523456023456560234560b08b766818b0806220
20b164dc4565234520b003266062636820b003266165b0dc236544b06423
4420b161634565234520b003266062636820b003266165b063236544b061
2344b10063455458b163406544b26140614523614459b3a67f434b456523
456023456560234560b089766818b080622020b1437f4565234520b00326
6062636820b003266165b07f236544b043234420b1a64b4565234520b003
266062636820b003266165b04b236544b0a62344b1004b455458b14b4065
44b2a640a645236144594b5242014b5058b108004259435c58b108004259
b3020b0a124358601b2159421610703eb0124358b93b21187e1bba040001
a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b
2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0
102342b0112342002b001845694445694445694445694473737374737373
737475752b7373747475184569447373742b4bb021534bb046515a58b03c
b03c45b040604459012b2b2b2b757575757575757543584010bf3ccf3c02
6f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f
229f22af2206757559435c58b6403c9f22ef220375592b2b017474747445
447373747475754544734544737445447374757373737373007575757375
75752b2b757575752b752b435841220063032d00010003032d0013032d00
23032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d00
040083032d0093032d00a3032d00b3032d0004032d032d45186944747475
75592b4358b900180332b330353238b80332b361663238b80332b3535a32
38b80332b3454e3238b80332b33c413218b80332b23f330a410f03320001
00ba033200ca033200da033200ea033200fa033200050332033245186944
74752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b7401
2b002b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b01
2b2b2b2b2b2b2b2b2b2b2b2b2b2b00017375007373004569440073730173
742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73742b002b2b
2b2b00>
[1959 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 118 20 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>PBAAAA+TimesNewRoman AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>PBAAAA+TimesNewRoman AddT42Char 
PBAAAA+TimesNewRoman /CharStrings get begin
/g20 20 def
end
PBAAAA+TimesNewRoman /Encoding get
dup 1 /g20 put
pop
end
%ADOEndSubsetFont
/NJDRFT+TimesNewRoman /PBAAAA+TimesNewRoman findfont ct_VMDictPut
/NJDRFT+TimesNewRoman*1 
[/.notdef /g20 254{/.notdef}rp]
NJDRFT+TimesNewRoman nf
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
188.28 216.028 mo
(\001)sh
263.4 156.028 mo
263.4 143.908 273.12 134.068 285.24 134.068 cv
297.36 134.068 307.08 143.908 307.08 156.028 cv
307.08 168.028 297.36 177.868 285.24 177.868 cv
273.12 177.868 263.4 168.028 263.4 156.028 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
263.4 156.028 mo
263.4 143.908 273.12 134.068 285.24 134.068 cv
297.36 134.068 307.08 143.908 307.08 156.028 cv
307.08 168.028 297.36 177.868 285.24 177.868 cv
273.12 177.868 263.4 168.028 263.4 156.028 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
275.52 152.308 mo
287.04 152.308 li
287.04 187.588 li
275.52 187.588 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -35.28 247.173 200.322 ]ct
<<
/T 1
/W 96 
/H 294 
/M[96 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&]Dqs;JG0$E#Jg'6!=.QW!!*>opAb4!q"Xml
!!!9%pAb4!rq?Bn#QOMu!XJaUp](@#s1nC0!XJb`p](@+s7#d`!Y>>+p](@+s8;Wl!Y>>1p](F-s8N'!
q>^U.s8RWF!!<c3s1nF1!tYG3i;!?T&-)Cnq#CL-s7?$]!!<c3nbDn[!tYG$r:p<p&-).uq#CL-s6tO6
!!Ei4n3;I"!!Ei4n/oIB!!Ei4i"+cB!!FDDi!8cJ!!FDDhuiKF!!FDDhuWWL!!FDDhuWcP!!FDDhuNcQ
!!FDDhuJ9'!!OJEhuGulqZ$dAs53l!JGT<N+917!&&82C!!OJEhuF;GqZ$dAs53k^nG<1h+917!"8M`n
"[E%F!!E#n!!PUehuEfUqZ$das53kWrqc[!5QAM!!.XkG"[E%&!!%NG!!Y[f^]4@!JG]BO5QAM!!$B#S
!!,=a"Mb!;&)d?c#!`.'!!!Pfqu?pcs1eU7#OqWk#(QZg!!!,rqu?qNs1eU7"8r&s#(QZg!!!&tqu?eJ
s1nU6!<2lr!e:6crVuqJqu?eJs+((K!.XnH!e:6#rVus`JGfHLs8RWK!!46m!<)s"s8RWK!!+1Wr;Zp!
s+((K!>",e!!<3#JGoNL#N5O\!rr:NrVus(nGN=gs8RWK!!*2kr;cltr;Zj#q#16p!WW2u!!*,urW!!#
s8W#t!<N,t!!33$s82isrr)m!!WW2t!!*#t!!E?&rr<&u!!*&u!!39&s82isJ,TEL"98Au!![q'!!!-$
rqla#It.M!"98Au!![q'!!!9(rqla#J%u$a#QOf$!![qg!!!9(r;6O!J%u$a#QO`"!![r2!!!Q0r;6O!
s53kW&-)S+!!E?&huE`Y&-)S+!!`W+huEa!s7lNm#7(:u!!",@q#(0t+91g1!'gMYr;['es6p!g5QCNW
!!e#Rn,NH<s7#se#QOhn!!%NKnGWCn!WW2h!!*'!nGWCn!WW2h!!3-"nGWCn"98DjE"E!Ki;N]Z"98Dj
J,]HJi;N]V!s8N&i;NZUi;N]Y"98DZrVll5rW!''s8V"!rr2u6rW!'%s8Tk7rr2u6rW!3)s8RTL#QOgS
r;cltrW!!As+(%J!It+I!!*&s!!,=^r;Zg&qu?d'huJ9~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: PBAAAA+TimesNewRoman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+TimesNewRoman gcheck setglobal} if
1 346 21 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>PBAAAA+TimesNewRoman AddT42Char 
PBAAAA+TimesNewRoman /CharStrings get begin
/g21 21 def
end
PBAAAA+TimesNewRoman /Encoding get
dup 2 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NJDRFT+TimesNewRoman*1 
[/.notdef /g20 /g21 253{/.notdef}rp]
NJDRFT+TimesNewRoman nf
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
286.68 167.548 mo
(\002)sh
417.72 248.068 mo
417.72 235.948 427.44 226.108 439.56 226.108 cv
451.68 226.108 461.4 235.948 461.4 248.068 cv
461.4 260.068 451.68 269.908 439.56 269.908 cv
427.44 269.908 417.72 260.068 417.72 248.068 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
417.72 248.068 mo
417.72 235.948 427.44 226.108 439.56 226.108 cv
451.68 226.108 461.4 235.948 461.4 248.068 cv
461.4 260.068 451.68 269.908 439.56 269.908 cv
427.44 269.908 417.72 260.068 417.72 248.068 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
429.84 244.348 mo
441.36 244.348 li
441.36 279.628 li
429.84 279.628 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -35.28 401.493 108.282 ]ct
<<
/T 1
/W 96 
/H 294 
/M[96 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&]Dqs;JG0$E#Jg'6!=.QW!!*>opAb4!q"Xml
!!!9%pAb4!rq?Bn#QOMu!XJaUp](@#s1nC0!XJb`p](@+s7#d`!Y>>+p](@+s8;Wl!Y>>1p](F-s8N'!
q>^U.s8RWF!!<c3s1nF1!tYG3i;!?T&-)Cnq#CL-s7?$]!!<c3nbDn[!tYG$r:p<p&-).uq#CL-s6tO6
!!Ei4n3;I"!!Ei4n/oIB!!Ei4i"+cB!!FDDi!8cJ!!FDDhuiKF!!FDDhuWWL!!FDDhuWcP!!FDDhuNcQ
!!FDDhuJ9'!!OJEhuGulqZ$dAs53l!JGT<N+917!&&82C!!OJEhuF;GqZ$dAs53k^nG<1h+917!"8M`n
"[E%F!!E#n!!PUehuEfUqZ$das53kWrqc[!5QAM!!.XkG"[E%&!!%NG!!Y[f^]4@!JG]BO5QAM!!$B#S
!!,=a"Mb!;&)d?c#!`.'!!!Pfqu?pcs1eU7#OqWk#(QZg!!!,rqu?qNs1eU7"8r&s#(QZg!!!&tqu?eJ
s1nU6!<2lr!e:6crVuqJqu?eJs+((K!.XnH!e:6#rVus`JGfHLs8RWK!!46m!<)s"s8RWK!!+1Wr;Zp!
s+((K!>",e!!<3#JGoNL#N5O\!rr:NrVus(nGN=gs8RWK!!*2kr;cltr;Zj#q#16p!WW2u!!*,urW!!#
s8W#t!<N,t!!33$s82isrr)m!!WW2t!!*#t!!E?&rr<&u!!*&u!!39&s82isJ,TEL"98Au!![q'!!!-$
rqla#It.M!"98Au!![q'!!!9(rqla#J%u$a#QOf$!![qg!!!9(r;6O!J%u$a#QO`"!![r2!!!Q0r;6O!
s53kW&-)S+!!E?&huE`Y&-)S+!!`W+huEa!s7lNm#7(:u!!",@q#(0t+91g1!'gMYr;['es6p!g5QCNW
!!e#Rn,NH<s7#se#QOhn!!%NKnGWCn!WW2h!!*'!nGWCn!WW2h!!3-"nGWCn"98DjE"E!Ki;N]Z"98Dj
J,]HJi;N]V!s8N&i;NZUi;N]Y"98DZrVll5rW!''s8V"!rr2u6rW!'%s8Tk7rr2u6rW!3)s8RTL#QOgS
r;cltrW!!As+(%J!It+I!!*&s!!,=^r;Zg&qu?d'huJ9~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: PBAAAA+TimesNewRoman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+TimesNewRoman gcheck setglobal} if
1 1288 23 <00020020000003b90568000a000d00d74028160d010f00450d400f03400f
012a0c011507010206010309050601040c0b0d00040c0d04060c0d0db801
1c401207081407070808030407060c08001f0d010dbb019c0006000b019f
400d050106090806060805040c0c04bb0149000300080166400b09090f03
019f03af030203b801f74018013f0001001a000f01600fa00fe00f030f06
40070107190eba018e010100182b4e10f4713c105d71f65d3c4df45d713c
10e610fd3c003f3f392f103c103c10ed10fd723c1139113901111239872e
2b047d10c4011112390f0f0f313000725d015d7172011523112311213501
331123110103b9b6a5fdc202756ea5fe2401f48efe9a0166800382fc8c02
a1fd5f00>PBAAAA+TimesNewRoman AddT42Char 
PBAAAA+TimesNewRoman /CharStrings get begin
/g23 23 def
end
PBAAAA+TimesNewRoman /Encoding get
dup 3 /g23 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NJDRFT+TimesNewRoman*1 
[/.notdef /g20 /g21 /g23 252{/.notdef}rp]
NJDRFT+TimesNewRoman nf
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
441 259.588 mo
(\003)sh
489.24 201.148 mo
489.24 189.148 498.96 179.428 510.84 179.428 cv
522.84 179.428 532.56 189.148 532.56 201.148 cv
532.56 213.148 522.84 222.748 510.84 222.748 cv
498.96 222.748 489.24 213.148 489.24 201.148 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
489.24 201.148 mo
489.24 189.148 498.96 179.428 510.84 179.428 cv
522.84 179.428 532.56 189.148 532.56 201.148 cv
532.56 213.148 522.84 222.748 510.84 222.748 cv
498.96 222.748 489.24 213.148 489.24 201.148 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
501.12 197.428 mo
512.64 197.428 li
512.64 232.708 li
501.12 232.708 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -35.28 472.773 155.202 ]ct
<<
/T 1
/W 96 
/H 294 
/M[96 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&]Dqs;JG0$E#Jg'6!=.QW!!*>opAb4!q"Xml
!!!9%pAb4!rq?Bn#QOMu!XJaUp](@#s1nC0!XJb`p](@+s7#d`!Y>>+p](@+s8;Wl!Y>>1p](F-s8N'!
q>^U.s8RWF!!<c3s1nF1!tYG3i;!?T&-)Cnq#CL-s7?$]!!<c3nbDn[!tYG$r:p<p&-).uq#CL-s6tO6
!!Ei4n3;I"!!Ei4n/oIB!!Ei4i"+cB!!FDDi!8cJ!!FDDhuiKF!!FDDhuWWL!!FDDhuWcP!!FDDhuNcQ
!!FDDhuJ9'!!OJEhuGulqZ$dAs53l!JGT<N+917!&&82C!!OJEhuF;GqZ$dAs53k^nG<1h+917!"8M`n
"[E%F!!E#n!!PUehuEfUqZ$das53kWrqc[!5QAM!!.XkG"[E%&!!%NG!!Y[f^]4@!JG]BO5QAM!!$B#S
!!,=a"Mb!;&)d?c#!`.'!!!Pfqu?pcs1eU7#OqWk#(QZg!!!,rqu?qNs1eU7"8r&s#(QZg!!!&tqu?eJ
s1nU6!<2lr!e:6crVuqJqu?eJs+((K!.XnH!e:6#rVus`JGfHLs8RWK!!46m!<)s"s8RWK!!+1Wr;Zp!
s+((K!>",e!!<3#JGoNL#N5O\!rr:NrVus(nGN=gs8RWK!!*2kr;cltr;Zj#q#16p!WW2u!!*,urW!!#
s8W#t!<N,t!!33$s82isrr)m!!WW2t!!*#t!!E?&rr<&u!!*&u!!39&s82isJ,TEL"98Au!![q'!!!-$
rqla#It.M!"98Au!![q'!!!9(rqla#J%u$a#QOf$!![qg!!!9(r;6O!J%u$a#QO`"!![r2!!!Q0r;6O!
s53kW&-)S+!!E?&huE`Y&-)S+!!`W+huEa!s7lNm#7(:u!!",@q#(0t+91g1!'gMYr;['es6p!g5QCNW
!!e#Rn,NH<s7#se#QOhn!!%NKnGWCn!WW2h!!*'!nGWCn!WW2h!!3-"nGWCn"98DjE"E!Ki;N]Z"98Dj
J,]HJi;N]V!s8N&i;NZUi;N]Y"98DZrVll5rW!''s8V"!rr2u6rW!'%s8Tk7rr2u6rW!3)s8RTL#QOgS
r;cltrW!!As+(%J!It+I!!*&s!!,=^r;Zg&qu?d'huJ9~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: PBAAAA+TimesNewRoman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+TimesNewRoman gcheck setglobal} if
1 1562 24 <00010062ffe80379054c0021011e4043a4040112591e691e7f057f067f1d
8c048d1d07350235215503552057216b1c7605791c87028a1a8a1ca303a8
09a023e0230f0023010f1011121315161708140d020303b8011c40112021
1420030420211a1b1c030718040503b8019fb320202113ba01f900180313
400c0d0d01e20002e22121000400ba013e001b0147b58007a0070207b801
f5400a40230140236023022316b801f9b61002a021012103b8019f400920
4010a01002101922ba019501e900182b4e10e45d4d10ed105d3c10ed105d
71f65dede4003f3c10ed10ed3feded12392fed0111391112173987082e2b
057d10c40011121739b10602435458400d72017202722082018202822006
005d59313001715d005d435c58400b6b046f12641e7005701d055d59015d
010721070417161514060607062322263534363332161716333236353426
2726270103794efe685901099b8557845173797a6f2e231a272f4b4d75b1
9e8b6dbc0104054caab6279e88b86bb680273753321c2b102134b17f7bd5
3a2d07020f00>PBAAAA+TimesNewRoman AddT42Char 
PBAAAA+TimesNewRoman /CharStrings get begin
/g24 24 def
end
PBAAAA+TimesNewRoman /Encoding get
dup 4 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NJDRFT+TimesNewRoman*1 
[/.notdef /g20 /g21 /g23 /g24 251{/.notdef}rp]
NJDRFT+TimesNewRoman nf
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
512.4 212.668 mo
(\004)sh
138.6 203.548 mo
138.6 156.628 230.88 118.708 344.76 118.708 cv
458.64 118.708 550.92 156.628 550.92 203.548 cv
550.92 250.468 458.64 288.388 344.76 288.388 cv
230.88 288.388 138.6 250.468 138.6 203.548 cv
@
76.44 119.428 mo
98.52 119.428 li
98.52 159.748 li
76.44 159.748 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[22.08 0 0 -40.32 48.0935 233.202 ]ct
<<
/T 1
/W 184 
/H 336 
/M[184 0 0 -336 0 336 ]
/BC 1 
/D[1 0 ]
/DS [cf /ASCII85Decode fl dup<</K -1 /Columns 184 >>/CCITTFaxDecode fl]
/O 1
>>
%%BeginBinary: 1
img
-D?M)+92B@s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!K-?_\
O=h1L%"ha.Jd9pNqZtae1)`S8_&@qf"puK*%B)S$Tf1F[_JZ?^VY\"?omYe*=4c"&ec4(tdXUo"%&j3&
rI8*eIgc,P([6(Z?N_27]&A,FCP)O%>UB/NE0e"=/sa"?$\cIV/;de,4=06<?@qg_00r/a3X['qBjpWL
+,.F\hhAdrha)`"IMVbfpau8J_YBiDZ+MaK09@A.rYN=VoY.a5?9Kt@Z>,R&s3g65m^i8ork>u3](W`'
]'ZX:f*f$s?*L=:[^cPJ2Su0HL)"kK7oQS,OL7&#(kQc9m3WZWL(!KYS8oKun,WM#~>
%%EndBinary
grestore
np
f
98.88 119.428 mo
181.44 119.428 li
181.44 133.108 li
98.88 133.108 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[82.56 0 0 -13.68 70.5335 233.202 ]ct
<<
/T 1
/W 688 
/H 114 
/M[688 0 0 -114 0 114 ]
/BC 1 
/D[1 0 ]
/DS [cf /ASCII85Decode fl dup<</K -1 /Columns 688 >>/CCITTFaxDecode fl]
/O 1
>>
%%BeginBinary: 1
img
-D3s8:.$-4"!G(-5kK()_#qSsA24.9@Mp;-%"U`jQlH\<H'OIR)j!lY#U6#fUEZD-$m=Ub<sD#?V?i?9
i1C9/S>QS,p`a5RM=?-`a?XMO-DHZb4<'PnJAHmI+CQKl0V"L=[L<o[&4@XW"rKXZ_?_:%:(/HX(=5=&
AeSmUOq"=df$H\e*E,O5H>RLA[s(EN<"kLHU&GU1kr++ti@"8aqV<l,f&6f49r-3eV=h!TU,FP#0"P9@
Jd;7(lI'bcDtLfppS[sCosD)qr@e3-S,IifdWD,R^]3Q5fDTXPs%E@!e\B`9]'@&6p&Ah#s4qdPp&G'l
YP#Z6fDkmKL/]i+f3e4Nl`^0bs8W,qhuBn[s'P#?s8W-!s8Ke5s8W-!rjmUZfD>OIs7Dr`s6HT_s8RcP
s8Q(%9#5<Cnn&;[aD)?;s8Ke5s8W,5qu4,*fDi&Sr.kfS_Z0Z/qZ$TqiIBbbr$l(Gqu;dOs5/>(J,fQK
qpY"@s8W,fqu?]jIo!O\hsRuRrSQ))s!5PWHiKr<"KT0&RofV#g1`dPFngFSl2U_Z6m?C1>.oCRBe\)K
F_uVW6(hXpV!?[IIf@@-eZ3D6lI/J'fNu=9p78d'KMJ5KrUk?'5quSds+P,C)bI0=([ls1RULl%>@B2Z
g1c@:/2:N*5k/>t1`/N\L&8H;@0V>i228mD0S9WJ+MhI%Iukj:J`*PIADka#"5m;cFFW_Q+uoT#s8M?a
X8i38r]C/Z^Zs_V])V0$qZ$QKs/W@&hu9dnlIu9=C]:H>qR4/t>VGkQ)ZPL#YNcJI?$q6WJVFnf%C!UG
@>._20OT^SWo0S9!.]]U"cP/n"sau#Qq/"t$iChhq)&S2c:3F9,ETtK"!.Fb!W~>
%%EndBinary
grestore
np
f
464.52 232.468 mo
476.88 232.468 li
476.88 220.108 li
464.52 220.108 li
cp
.750179 .679652 .670191 .901488 cmyk
ef
464.52 232.468 mo
476.88 232.468 li
476.88 220.108 li
464.52 220.108 li
cp
@
470.52 226.108 mo
471.96 222.748 li
472.2 222.628 li
472.44 222.988 li
471 226.348 li
470.64 226.468 li
470.52 226.108 li
cp
473.04 220.468 mo
474 218.428 li
474.84 217.228 li
475.2 217.108 li
475.2 217.468 li
474.48 218.668 li
473.52 220.588 li
473.16 220.708 li
473.04 220.468 li
cp
476.16 214.948 mo
478.2 211.828 li
478.56 211.828 li
478.56 212.188 li
476.52 215.188 li
476.16 215.308 li
476.16 214.948 li
cp
479.76 209.788 mo
480.72 208.588 li
482.16 207.028 li
482.64 207.028 li
482.64 207.388 li
481.2 208.948 li
480.24 210.148 li
479.88 210.148 li
479.76 209.788 li
cp
484.08 205.108 mo
486.12 203.308 li
486.84 202.708 li
487.2 202.708 li
487.08 203.068 li
486.48 203.668 li
484.44 205.588 li
484.08 205.588 li
484.08 205.108 li
cp
488.88 201.148 mo
489.12 200.908 li
489.48 201.028 li
489.36 201.388 li
489.24 201.508 li
488.76 201.508 li
488.88 201.148 li
f
471 226.228 mo
470.64 229.588 li
470.52 229.948 li
470.28 230.188 li
470.04 229.828 li
470.16 229.588 li
470.4 226.228 li
470.76 225.988 li
470.88 226.108 li
471 226.228 li
cp
470.16 232.468 mo
470.04 232.708 li
469.2 235.708 li
469.08 236.068 li
468.84 236.188 li
468.6 235.948 li
468.72 235.588 li
469.56 232.708 li
469.56 232.348 li
469.92 232.228 li
470.16 232.468 li
cp
468.24 238.468 mo
468.24 238.588 li
466.92 241.228 li
466.56 241.828 li
466.2 241.948 li
466.08 241.588 li
466.44 240.988 li
467.76 238.348 li
468.12 238.228 li
468.24 238.468 li
cp
465.12 244.108 mo
463.68 246.028 li
462.84 246.868 li
462.48 246.988 li
462.48 246.628 li
463.2 245.788 li
464.76 243.748 li
465.12 243.748 li
465.12 244.108 li
f
285.48 207.748 mo
297.84 207.748 li
297.84 195.388 li
285.48 195.388 li
cp
ef
285.48 207.748 mo
297.84 207.748 li
297.84 195.388 li
285.48 195.388 li
cp
@
208.92 204.268 mo
212.52 203.788 li
212.88 204.028 li
212.64 204.268 li
208.92 204.748 li
208.8 204.748 li
208.68 204.508 li
208.8 204.388 li
208.92 204.268 li
cp
215.16 203.428 mo
218.76 202.948 li
219.12 203.188 li
218.88 203.548 li
215.16 204.028 li
214.92 203.788 li
215.16 203.428 li
cp
221.4 202.708 mo
225 202.348 li
225.24 202.588 li
225.12 202.828 li
221.4 203.188 li
221.16 202.948 li
221.4 202.708 li
cp
227.64 202.108 mo
230.88 201.748 li
231.24 201.748 li
231.6 201.988 li
231.36 202.228 li
231 202.228 li
227.64 202.588 li
227.4 202.348 li
227.64 202.108 li
cp
233.88 201.508 mo
237.48 201.268 li
237.84 201.508 li
237.6 201.748 li
233.88 202.108 li
233.64 201.868 li
233.88 201.508 li
cp
240.12 201.028 mo
241.56 200.908 li
243.84 200.788 li
244.08 201.148 li
243.84 201.388 li
241.56 201.508 li
240.12 201.628 li
239.88 201.388 li
240.12 201.028 li
cp
246.36 200.668 mo
250.08 200.548 li
250.32 200.788 li
250.08 201.028 li
246.36 201.268 li
246.12 201.028 li
246.36 200.668 li
cp
252.72 200.428 mo
256.32 200.308 li
256.56 200.548 li
256.32 200.908 li
252.72 200.908 li
252.36 200.668 li
252.72 200.428 li
cp
258.96 200.308 mo
262.32 200.188 li
262.56 200.188 li
262.8 200.428 li
262.56 200.788 li
258.96 200.788 li
258.72 200.548 li
258.96 200.308 li
cp
265.2 200.188 mo
268.92 200.308 li
269.16 200.548 li
268.92 200.788 li
265.2 200.788 li
264.96 200.548 li
265.2 200.188 li
cp
271.44 200.308 mo
272.28 200.308 li
275.16 200.428 li
275.4 200.668 li
275.16 200.908 li
272.28 200.788 li
271.44 200.788 li
271.2 200.548 li
271.44 200.308 li
cp
277.8 200.428 mo
281.4 200.668 li
281.64 200.908 li
281.4 201.148 li
277.8 201.028 li
277.44 200.788 li
277.8 200.428 li
cp
284.04 200.788 mo
287.64 201.028 li
287.88 201.268 li
287.64 201.508 li
284.04 201.268 li
283.8 201.028 li
284.04 200.788 li
cp
290.28 201.148 mo
291.72 201.268 li
291.96 201.628 li
291.84 201.748 li
291.72 201.868 li
290.28 201.748 li
290.04 201.388 li
290.28 201.148 li
f
355.8 220.828 mo
352.44 219.388 li
352.32 219.028 li
352.68 218.908 li
356.04 220.348 li
356.16 220.468 li
356.16 220.588 li
356.04 220.708 li
355.8 220.828 li
cp
350.04 218.308 mo
347.52 217.228 li
346.68 216.988 li
346.56 216.628 li
346.92 216.508 li
347.64 216.748 li
350.28 217.828 li
350.4 218.188 li
350.04 218.308 li
cp
344.28 216.028 mo
340.8 214.708 li
340.68 214.348 li
341.04 214.228 li
344.4 215.548 li
344.64 215.908 li
344.28 216.028 li
cp
338.4 213.748 mo
334.92 212.548 li
334.8 212.308 li
335.16 212.068 li
338.52 213.268 li
338.76 213.628 li
338.4 213.748 li
cp
332.52 211.708 mo
331.08 211.228 li
329.04 210.628 li
328.8 210.268 li
329.16 210.148 li
331.2 210.748 li
332.64 211.228 li
332.76 211.588 li
332.52 211.708 li
cp
326.52 209.788 mo
323.04 208.708 li
322.8 208.348 li
323.16 208.228 li
326.64 209.308 li
326.88 209.668 li
326.52 209.788 li
cp
320.52 207.988 mo
316.92 207.028 li
316.8 206.788 li
317.16 206.548 li
320.64 207.508 li
320.88 207.868 li
320.52 207.988 li
cp
314.52 206.428 mo
310.92 205.468 li
310.68 205.228 li
311.04 204.988 li
314.64 205.828 li
314.76 206.188 li
314.52 206.428 li
cp
308.4 204.868 mo
307.08 204.628 li
304.8 204.148 li
304.56 203.788 li
304.92 203.668 li
307.2 204.148 li
308.52 204.388 li
308.64 204.748 li
308.4 204.868 li
cp
302.28 203.668 mo
299.28 203.068 li
298.68 202.948 li
298.44 202.588 li
298.68 202.468 li
299.4 202.588 li
302.28 203.068 li
302.52 203.428 li
302.28 203.668 li
cp
296.04 202.468 mo
292.44 201.988 li
292.2 201.628 li
292.56 201.388 li
296.16 201.988 li
296.4 202.348 li
296.04 202.468 li
f
290.4 211.828 mo
300.96 211.828 li
300.96 247.108 li
290.4 247.108 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[10.56 0 0 -35.28 262.053 140.802 ]ct
<<
/T 1
/W 88 
/H 294 
/M[88 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGh$r:p<p#QOh^q>^U^s8W)p!<)ot_#+04"9&6"
nGE7d&,lM.r;6Np+8l0:!!#7]rrBk5!!%NHrrDQe!;lcrq#16n!W2lsrr)lt!WN*%n,`RhJ-#]N"9/<8
!!!Q0^]4?>s8Vus!!3,X!!!9(s7$!f#ClLK!"],0_#=<=+8c*=+92@krW!--rVup?s8W#t"p+aS!$D7?
qu?nM^]6V!r;6Nu5MuN+s7lKl"V:)&J,f<A!!NW&!.Y%<qu?p%quD6HhuNZT"TACNs5<bS"?unds1nL3
"<RXDs1nL3"9nl+s1nL3"9JT's1nF1!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'qG!s&B$
JGB0Hs8RWF!!<3#JGB0HJ,b&p!!7ZM_"ds3J,d=[!!7ZM_"ds3J,fHB!!>Ics8;]n!'gJ_!:]jc!'gG^
!.atI!'gG^!;QHl![%I$rr2tKr;[$Ds54.^s7#se"s<m7!'gM_r;['5s6p!js8RWK!!a&7n,NH<s7$!f
#7pk(!!!Q0r;H[$#QOQ!!!E9$rW!!)s7lQn#QOh>!!!-$q#16u5QC3Q!!E9!rW!06s7cQo!WW)s!!EE(
rVup"!WW/t!<<)u!!3-!r;[%Os1eU7s8Mrs"s<m'!!%NKr;[$4s6p!gJ,fHI#7(;(!!#7`JGoNR"98?#
!$D5kr;['%rr<$@s1nR5#(QZ'!"]+Fr;[%Os*t(Ss5<hU#!`.'!!iP^r;[*Fs53kZs6p!g#QOi8s6p!h
s7lNm"pb1t!!*&or;[$,s7cQos8;fq"p=o#!!%NJr;[$(s82is5Q:T]"p+c%!!",@r;[''s8Duu&-%1Y
!!`K&!!!9(_#46;s8Duu"97<X!!`K'!!!'"nGN=fJ,fKJ!WVrn!!7ZM!!<3$J,K6F!It.K!!,=`r;ZkJ
s8E!!+929>!It.K!!3]2JGoNLJ,fKJ!X&J\rVutKs8E!"!WVZg!!3-!r;ZkJq#16os8Mrs#!`(e!!3-!
r;[$4s*t(Ms8;fq"p=n`!!E8rr;[$&s7cR)s7lKl!C-SdJ3X)'qu?^-rVll5qu?^!rVlkJqZ$_Js8W)p
!!<K+s7lBi"$cg9!.Y~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: PBAAAA+TimesNewRoman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+TimesNewRoman gcheck setglobal} if
1 810 22 <00010053ffe8035605680032014cb9000affe0b20c3909b8ffc0403c0c39
4109450a460b4b2204cf09012929382940346034cf34e034f70a07003401
41097f237a2eaa24b924ba2ec92edf23df25db2eea22e9250c490829b801
8cb328281000b802e4b3d0300130b80334b5030510160116b8019fb51d40
2b2f341db80143b3100d2928bb01680014000902e3400b50208020029020
a0200220b80333b3b00c010cb80190400b502d802d02902da02d022db803
33b55f077f070207b802e5400a403401a034c034023400b8013eb74013bf
1302131933ba011e01e800182b4e10f45d4de4105d71f65ded5d71f45ded
5d71e410f43c003fed2bed723fed5ded12392fed3130437940362e2f1e26
0a0f04062221232124212521040605250e26260a2062012f042d62011e0f
206201210b2762010a092e063062011f0d1d62002b2b103c2b012b2b2b2b
2b2a81818181005d01715d7200712b2b1336363332171615140716161514
070621222635343633321716161716333236353427262726262323353e02
353426232207683ab184a35742ba7d807092feeb89632f21191a11781725
2a6697231a1f2b964e204f9f4881609b68044a89956a4f5a949e31b67bb0
81a844271d2c08053f060b9e6c4f4b381d28411e0a5e844f677fa600>PBAAAA+TimesNewRoman AddT42Char 
PBAAAA+TimesNewRoman /CharStrings get begin
/g22 22 def
end
PBAAAA+TimesNewRoman /Encoding get
dup 5 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NJDRFT+TimesNewRoman*1 
[/.notdef /g20 /g21 /g23 /g24 /g22 250{/.notdef}rp]
NJDRFT+TimesNewRoman nf
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
301.32 227.068 mo
(\001\005)
[8.39999 0 ]xsh
88.56 230.308 mo
162 230.308 li
162 208.228 li
88.56 208.228 li
cp
.175509 .175479 3.0518e-5 3.0518e-5 cmyk
ef
88.56 230.308 mo
162 230.308 li
162 208.228 li
88.56 208.228 li
cp
.750179 .679652 .670191 .901488 cmyk
@
97.92 212.308 mo
102.72 212.308 li
102.72 259.828 li
97.92 259.828 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 69.5735 140.322 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&b5_MDr;Zg-r;Zg]r;ZhFrVus"q#16o"7Z9i!>!!F!!+0lrVup_r;ZhH
rVus"r;HZs"8Miq!=/,n!!*W"rVus@i;N]W+2IjU!C),6!!.S"rVururVus"rr)lu!WN&u!<`9!!!*?&
rVus0q#16o&,?,(!?^h1!!+22rVus`nGWCgJ)L;+!Is&,!!3,XrW"AH^]4?8s1eU7!WTq8!!3,8!!!-$
J,fQOs*t(L#QK;S!!iOS!!!9(rW!$2rr<$#!"],/!!*W1rVus@s8E!!+92<?!?_=?!!,=`rVus`rr)lu
5Q:W^!C-S_!!,=`rVutKrr)luJ,]EI!It+J!!.TIrVutKr;HZsJ,K9G!WW)s!!3,trW!!!r;HZss8;ir
!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!*$!r;HZss8;ir!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!3,t
rW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVus`rr)lu5Q:W^!C-S_!!,=`rVus@
rr)lu+9)6>!?_@@!!+2ArVus0s8E!"&,uV3!!!Q0rVus(s8E!;#QK;S!!E7O!!!-$J,fQOs*t(L!WTq8
!!3,8rW!!!_#=<7s1nU6!Is&,!!.T-rVus`i;N]W5OeXP!?^h1!!*W*rVus0q#16o#Pe8u!<`9!!!*3"
rVus"rqufsrqufsJ,K?JIt7Lu!^D28!rr<C_#=<7&)dEe!=/,n!!*2krVus"q#(0mr;?TqIf06I++X=j
!>!!F!!*>_rVus"q#(0mr;?Tq55bH]%fHA-!e:~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: HIBBAA+TimesNewRoman,BoldItalic Initial
ct_T42Dict begin
-0.547 -0.305 1.398 1.031
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+TimesNewRoman,BoldItalic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200b9ce43b00000124000007a86670676d4a5f6448000008cc00000634
676c796600000000000031f40000028468656164dce9524f00000f000000
0036686865610e560ee000000f3800000024686d74780000000000000f5c
000000f06c6f6361000000000000104c000017286d61787010e403bf0000
2774000000206e616d6500000000000027940000002c70726570d3359107
000027c000000a3267646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000fc000000fc0000000000000000002500f30120005f0055
00ea0032007400cf0055004b00af013f000900f501080026008000170154
0002001600b800d3005000f00023ffbe00dd00f70035ffe9001102b60049
00a901490158002e003b008601080023003f0039003a004e00e3013f003d
010a000900710108feff004c0082009c00c700d80015003a006d035105d8
00280028009f05b800500064001500da015b017cffc2ffd8fff40099ffff
001d002d00d9011c01740446004e007200be00dd09b50038004b006d009d
0118001b003c005c0069007a00a800c60122fff2000d008600e3022b0552
00300047009100f4040104c9ffafffc1ffd5002c003b003b003e004b006b
009900a500b801c002210343ff8c0041004b005f009a00a600be010a01dc
031e0390ff6700250031005d006e00b600c000d000d3010a015001bc0274
027b02d7000900360048004c005c006f00840093009500a600a800ac00b0
00b700bc00c00104013601370145019403b6fd81fe3f00070019003a003b
005b00b800c500e100f801160127012c013401470149015d01bc03ed0474
0532053eff00ff970008000f005c006d007000820089008b00a700c100f6
00f80129017aff72ff88000000000025003e0059006d0071007200810081
00bc00dd00de011401150150019c01d6027e0404041cff7b002000390046
004c004d005a0068006c00720080008300a300ce00d100e200ed0107011f
0126013f016a01e0035e03a303a703cc05d805f0fed8ff78ffaeffe1ffe7
001900240041005500580071008200860088009000b000bb00c200c400d0
00ed00f700f801150118011f012c015e017c019801a201cc01d201fa022b
026d02cf02cf02df0333039103e304ab04fc04fe058805e706bffed1ff4a
000000010003000400170024003c004d0056005c0067007700a800b000b8
00c300c600c800e900eb00f500f8010a010c0127013501350139013f0149
014d0197019801c701ee023d02500258026d026f029402b30300031a032a
0361039603a104330440047904da04e804fb057b058c05ab0761fe60fe99
ff00ff13ff2fff47ffed00180031003f004c006b00740078007c00840094
009700b000b600b700d800da00e200e400e500eb00ee00ef00f600fa0106
010c011101110114013b013e01450149014d015b0164016f0184019101b3
01b901d101e101e501ef0205020602220236023b023e024102600276029a
029a029d02c402ee03130327032b0373038c03ba03c203d2040f04850515
05320532054905610595069906a8072707480762081008ccfd2afddefe23
fe44fe67fe96feacff24ff41ff5cff61ff9effa3ffb7ffc2ffc5ffcaffdd
fff0000000000003000800100018001c0023002b0030003e0046004b0052
005e005e006e007a007b00830085008a00910092009800a800af00b600cc
00ce00cf00d200e700f100f200fa01010108010b0112012601270127012e
013601370138013b013e0140015b016a017001740179018201840188018d
0192019b01a001a001a001ab01b801bc01c001cc01da01dc01e001e00201
02100214021d022902300230024302460269027a0284029502a302b402c1
02c202cf02dd02e102ec02f00310033a03450388039903ad03bd03d403d5
03e303ea03f304260426046e04d104e00513054b057605a305b705c205f8
063b065b06b806e80706071a0724075007a907d407ff082700f6012600f1
00df000000000000000000000000038402af02f301b80205017a04910491
049e019f0425049e019f049e019f027a005101ac02610319033b021c033b
01ee01880278020a01ee033b029f002400240261019e015e017100440149
028400990284009902840025004100450298020501c90249044401880444
00000000023005d30415035d01810023016e003504c9005b059604910025
026202dd01d00434030a0319031e03c1049e05e8035c00000282ffef040d
03ce0209010c01f6025303a202df02d0000a00d6008200000032010901a2
01af01770204027a019e02eb019b01ec024e0326045b03ee03c3042600b7
03620031004f0027ffee01240096036700d7037502910326032600410045
01d7007402ff02a50216029f017a0100031c005000b7012b016800f90031
01a8013a00a801cc00f3012502020021007301c70603021b0142010501e1
012403350272018c044301e50282010f02fe01ee034a02c50210024e022a
02a501cf005f00b1026603b203580115008e015d02a500d1fee201b0010b
015a0395005900f70783031b008b045d00a101440100009400b4febf03c6
00e803ce017303e6012e0222049500390023033b01b8000003f001400153
03b401a805ee061801c6007d00cd00d1037c008500bd00ccfc47fcb10084
02a7fccb046402ba0167032b00700136000001320068030c0155001bfe6f
ffc60249013102f1fe79feb4fcf2ff4203adfc0efc61032a00c3009100a1
0077004c0002015e008400860023005d004b010a01b80086ffc500a80072
008800590028009901350015003d0056007a00f801d600090007000f00e2
001700bc016a00ed0274005b0136000000ab0080005005a50090fe40013a
004800db018b00b300480420040e022b0457008c00820082002203d703f1
045840425554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928
27262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b09051582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c
482d2c01182f2d2c20b0032545b019234445b01a23444565234520b00325
606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe000
1a45208a54582321b03f1b235961441cb114008a5279b31940201945208a
54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d
2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2c
b11011432343650b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c4bb06451584569b00943608a103a1b212110592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c
352d2c76b802df23701020b802df4520b0005058b00161593a2f182d2c21
210c6423648bb84000622d2c21b08051580c6423648bb82000621bb20040
2f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2cb4000100000015b00826b008
26b00826b008260f10161345683ab001162d2cb4000100000015b00826b0
0826b00826b008260f1016134568653ab001162d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb01343
58021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb004
25b00425060c6423646164b807085158b00425b00425012046b010604820
46b0106048590a21211b2121592d2cb012435c580cb00425b00425060c64
23646164b807085158b00425b00425012046b8fff060482046b8fff06048
590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b
515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d
2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46
2346608a8a462320468a608a61b8ff8062232010238ab903bc03bc8a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042
b123018851b1400188535a58b910000020885458b202010243604259b124
01885158b920000040885458b2020202436042b12401885458b202200243
6042004b014b5258b2020802436042591bb940000080885458b202040243
604259b94000008063b80100885458b202080243604259b94000010063b8
0200885458b202100243604259b12601885158b94000020063b804008854
58b202400243604259b94000040063b80800885458b202800243604259b1
2801885158b94000080063b81000885458ba000201000002436042595959
595959592d2cb0024354584b53234b515a58381b2121591b21212121592d
000100000006cf5cb1b0afba5f0f3cf50819080000000000a31fbca40000
0000cbc07b83fb9ffd8c0b35084200030009000100000000000000010000
0721fe4500570aaafb9ffa460b3500180007000000000000000000000000
003c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0556
ff850000003b003b003b003b003b003b003b003b003b003b003b003b003b
003b003b003b003b003b003b003b003b003b003b003b003b003b003b003b
003b003b003b003b003b003b003b003b003b003b003b003b003b003b003b
003b003b003b003b003b003b003b003b003b003b003b003b003b003b003b
003b01420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
0142014201420142014201420142014201420142000100000b9300f2003c
0091000500020010002f0056000004a5ffff000400020000000100120002
000200000006001a000054696d6573204e657720526f6d616e2c426f6c64
4974616c6963410c005403d302c9001d001f03d303d303d203d1003c001f
03d1b2061d1fb903ca03c9b2351f00411503c2003003c2004003c200a003
c200b003c20005008003c0009f03c000af03c000cf03c00004ffc003c0b3
45453240b803c0b32b2e3240b803c0b2282932b9ffc003c0b21a2632bd03
c002c80027001fffc003beb2161b32b9ffc003bdb2424232b9ffc003bdb2
363832b9ffc003bdb32a2d32df410a03bd00ef03bd000203bd03be002800
1fffc003beb3282e32f0b803beb5019006900702b9ff8002c8b2313340b8
02c8b31c333210411b02c8006002c8007002c80003000f02c800af02c800
0200b002c800e002c80002005f02c800a002c80002002f02c8003f02c800
4f02c840a8030100000340cd383b32404d383b32a41fb41fc01fd01fe41f
05501f641f741f841f04041f141f241f341f441f05e41ff41f02ab1fbb1f
cb1f03cfcddbcd028bcd9bcdafcdbfcd04cdcdcd4ddb4d028b4d9b4dad4d
bd4d044d4d377f047f05027f027f03020f0301cf03df03ef03ff03048f03
9f03af03bf03044f035f036f037f03049f02af02bf02cf02049f03af03bf
03cf03045f036f037f038f03041f032f033f034f03047f411e0366000100
6f03660001005f03660001004f03660001003f03660001002f0366000100
1f03660001000f0366000100ff0366000100ef036600010366b221370f41
2402dd0001005f02dd009f02dd00df02dd0003002f02dd003f02dd006f02
dd0003009f02c900df02c90002000f02c9001f02c9003f02c9005f02c900
0402dd02dd02c902c902c802c84014010001010009010200080017170000
001211084041110286019e003f000d013d003f000d0116003f000d026f00
83000d02170083000d0174b7830df3830d76830d410d02350024000d0218
0024000d02030024000d01610024000d01134017240da6240d95240d8224
0d6f240d5b240d46240d22240d410d0249001e000d020e001e000d01c100
1e000d01a3001e000d0178401d1e0df61e0df11e0de21e0ddd1e0dce1e0d
751e0d701e0d651e0d521e0dbb02140037000d01a0400b370dfb370d2d37
0d1d370db80215b40f440f0009bb02150044000d023cb24d1d1fb8023ab2
4d1f1fb80237b24d2a1fbc0232004d0201001f022eb21f931f4109022c00
1f0125001f022b001f0156001f022ab21f931f410d022801400079001f02
1f016d0156001f021e00330401001f021db233e41fb8021bb233411fb802
16b2212d1fb801c3b24d1e1fb801bfb24d931fb801beb24dcd1fbc01bb00
4d0201001f01b7b21f671f410d01b601400089001f01b200360401001f01
b10036019a001f01b0b236bb1fb801afb236ab1f410901ad016d0067001f
01ac016d0072001f01a6b2212c1fb801a5b221351fb801a4b2213b1fb801
a2b2215e1fbc01a100350201001f017bb24d931fbc0179004d0401001f01
76b24dcd1f41150175001f0125001f01730140006c001f01700036019a00
1f016f00360125001f016b00330401001f0169b233811f41090166002101
25001f0163003b0125001f0147b24d221f410d0143001f0101001f013b00
3302ab001f013a00330101001f0139b233341fb80136b2212e1fbc013300
210401001f0132b23bab1fbc011f01400081001f0119b2212d1fb80117b2
21471fb80111b235cd1fb80108b24d791fb80106b21fab1fb80105b23672
1fb80100b721471ff51fe41ff4b90140080140131fef332c1fee212e1fed
214c1fe04dcd1fdf4db80101b21fdc1fb80125b51fdb1fcd1fdab9014008
01b61fd936891fd621b80156b21fd53bb80156b21fcd4db80156b21fcc4d
bb0101001f00ca0140b29e1fc9b9016d0156b21fc733b80801400b1fc233
3b1fc133381fbe21b80125b21fbb3bbb0801001f00b3016db29e1fa7b801
40b76c1fa321cd1fa235b8019a400f1fa13bab1f99215e1f8c35e41f841f
b80401b61f8121381f7f21b80125b61f7b334c1f7935b8019ab61f714d27
1f6e3bb80101400f1f664d4a1f6321891f6033521f5a3bbb019a001f0058
016db2721f57b9016d0801b51f55212e1f4fb80140b76c1f4c369e1f4b35
b80401b21f493bb80201400b1f483bcd1f45212a1f433bb8012540161f42
4d521f414dcd1f4033891f39366c1f2e21301f2cb80140b2791f2bb90140
0401b61f2833e41f2735b8019ab21f5537bc0257000701d600070187402e
07de07a8079e0756073e073407300729072607250720071408120810080e
080c080a080808060804080208000814b8ffe0402c000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a009fbd028600af028600bf02860003b013034b024b5342b0372b4b
b807ff52b0382b4bb007505b58b101018e59014bb0c063004b6220b0f653
23b8010a515ab005234201b0124b004b544218b0382bb00288b801005458
b801ffb101018e851bb0124358b900010139858d1bb90001013c858d5959
01b0372b730016763f183f123e113946443e113946443e113946443e1139
46443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b
2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d
594bb02753205c58b9028802864544b90287028645445958b90124028845
5258b9028801244459594bb03053205c58b9016d02884544b90288028845
445958b90162016d455258b9016d01624459594bb04353205c58b9001f02
874544b9004d028745445958b9025e001f455258b9001f025e4459594bb8
012553205c58b9003602884544b9003a028845445958b908970036455258
b9003608974459594bb8040153205c58b90140003a4544b13a3a45445958
b91ee00140455258b901401ee04459594bb00c53205c58b13b3b4544b133
3b45445958b1123b455258b13b124459594bb03153205c58b13b3b4544b1
213b45445958b1503b455258b13b504459594bb03953205c58b13b3b4544
b1353b45445958b15d3b455258b13b5d4459592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
45695342014b5058b108004259435c58b1080042591610703eb0124358b9
11a63d851bba011b03d9000b2b59b00a2342b00b2342003f3f182b103c01
2f4bb00d5458b90001ffb038594bb00c5458b90001ffb03859060cb00623
42b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b011234200184569
444569441845694473737373742b45447474757575757575757500757575
757474747573732b45186944747445186944747474747575752b2b000045
4445447373737475002b2b73752b2b732b2b2b2b2b2b2b2b2b75732b002b
2b4569442b2b000000>
[645 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 118 59 <0001ff840000061b054c0038015640872800280d24153800361548014904
49054d064723483159025b047b270e160d370d670d681d04140d440d020d
1d1e1d1c1e0c0000382a292a2b29011c1d1d1e2a2b2b1b0000010d380d0c
380e060c071d06171b181d172329241d233338341d330501041d05160e15
1d16221e211d22322b311d32362a1d0d00043a3937362a1d0d000605331b
0eb8ffe8b5090a42552b2bb803664033380e1438380e0c1e1e1f29011429
2901382b291e0e0c01073a39382b291e1b0e0c0108331716160606050233
323223232208a0b9011c00182b003f3c103c103c3f3c103c103c12173901
11121739870e2e2b0e7d10c4870e2e182b0e7d102bc40011121739011112
173933180010ed0110c00010ed0110c00010ed0110c00010ed0110c00010
ed0110c00010ed0110c00010ed0110c00010ed0110c00708103c083c870e
7d10c4083c0e3c0708103c083c0708103c0e3c313000715d015d01032626
273521070606151417133736373635342627372107060706070113161617
07213736363534272707060615141617072137363736370268d338454a02
570b3f2c2378a78c271731360c01bb09322a439dfe93cd4747460afda70c
3f3a386efa772738400cfe2a0a35265d88027301ec823f07252505282127
53fee4997f3f251e1b2c032525091b2b90feb1fe23a3460e252501312431
80ffe96e431e1e2e0225250a17387e00>HIBBAA+TimesNewRoman,BoldItalic AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb010f000600070272b200
0504b8010fb403000a0704b8010fb5010019080605bf010f000200030144
00090120012b00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>HIBBAA+TimesNewRoman,BoldItalic AddT42Char 
HIBBAA+TimesNewRoman,BoldItalic /CharStrings get begin
/g59 59 def
end
HIBBAA+TimesNewRoman,BoldItalic /Encoding get
dup 1 /g59 put
pop
end
%ADOEndSubsetFont
/NJDRFU+TimesNewRoman,BoldItalic /HIBBAA+TimesNewRoman,BoldItalic findfont ct_VMDictPut
/NJDRFU+TimesNewRoman,BoldItalic*1 
[/.notdef /g59 254{/.notdef}rp]
NJDRFU+TimesNewRoman,BoldItalic nf
NJDRFU+TimesNewRoman,BoldItalic*1 [17.3668 0 0 -17.4 0 0 ]msf
103.08 224.428 mo
(\001)sh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
114.72 226.948 mo
(\001)sh
%ADOBeginSubsetFont: QJJAAA+TimesNewRoman,Italic Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+TimesNewRoman,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742008fab09e000001240000079c6670676d4d5f5868000008c000000634
676c796600000000000033200000041668656164dcc34e5a00000ef40000
0036686865610e310e7a00000f2c00000024686d74780000000000000f50
000001446c6f63610000000000001094000017286d617870112c04140000
27bc000000206e616d6500000000000027dc0000002870726570ab1cb91f
0000280400000b1b67646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5fe4000ce006e0056004800db018b00b3
004802390458005300820082002203d703f1047040425554403f3e3d3c3b
3a3938373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c
1b1a191817161514131211100f0e0d0c0b0a090807060504030201002c45
23466020b02660b004262348482d2c452346236120b02661b00426234848
2d2c45234660b0206120b04660b004262348482d2c4523462361b0206020
b02661b02061b004262348482d2c45234660b0406120b06660b004262348
482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c
003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed5158
2320b04d44235920b09051582320b00d44235921212d2c20204518684420
b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b
4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d
2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b21
21592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b0
0643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c
642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b011
2bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4
5959182d2c2d2cb0022546608a46b040618c482d2c01182f2d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b23
5961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c
0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b0
0943608a103a1b212121592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a
2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b8
02ee4520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c
21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051
580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000
626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f101613
4568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b5458
20458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b
2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b8
07085158b00425b00425012046b01060482046b0106048590a21211b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b53
234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c
4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b54
5a8a8a0ab012435c5a58381b2121592d2c462346608a8a462320468a608a
61b8ff8062232010238ab903b003b08a70456020b0005058b00161b8ffba
8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188535a58
b910000020885458b202010243604259b12401885158b920000040885458
b2020202436042b12401885458b2022002436042004b014b5258b2020802
436042591bb940000080885458b202040243604259b94000008063b80100
885458b202080243604259b94000010063b80200885458b2021002436042
59b12601885158b94000020063b80400885458b202400243604259b94000
040063b80800885458b202800243604259b12801885158b94000080063b8
1000885458ba000201000002436042595959595959592d2cb0024354584b
53234b515a58381b2121591b21212121592d000100000006cf5cb1b0afba
5f0f3cf50819080000000000a31fb8bd00000000cbc07b87fc05fd8c0aaa
0830000200090001000000000000000100000721fe4500570a3afc05fa50
0aaa0018000700000000000000000000000000510639011c0639011c0639
011c02000000020000000200000002000000020000000200000002000000
02000000020000000200000002000000020000000200ffec0200ffec0200
ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec
0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200
ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec
0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200
ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec
0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200
ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec
0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200ffec0200
ffec0200ffec0200ffec05c7002300000034003400340034003400340034
00340034003400340034003400340034006e006e006e006e006e006e006e
006e006e006e006e006e006e006e006e006e006e006e006e006e006e006e
006e006e006e006e006e006e006e006e006e006e006e006e006e006e006e
006e006e006e006e006e006e006e006e006e006e006e006e006e006e006e
006e006e006e006e006e006e006e006e006e006e006e006e006e020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b000100000b9300f2003c0097000500020010002f0056000004edffff
0004000200000001001200020002000000060016000054696d6573204e65
7720526f6d616e2c4974616c6963410c005403cd02b0001d001f03cd03cd
03cc03cb003c001f03cbb3061d1f00410c03bc003003bc004003bc00a003
bc00b003bc0005ffc003bbb345453240b803bbb32b2e3240b803bbb22829
32b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03bb000400
0003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8
b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03
b8000203b803b90028001fffc003b9b3282e32f0410f03b90001000003b7
000103b700030800001f03be03bf002b001fffc003bfb2242a32b903b603
81b23a1f0f411703b3001003b2002003b2005003b2007003b200e003b200
0600cf03b300df03b300ef03b300ff03b30004001203a8b2e2891fbe039f
016b019a001f039800930801400c1f7f047f05027f027f03025fbb02b000
01ffc00117b2196632b8ffc0b3651a6632b9ff800173b2196632bd038401
170800001fffc002afb2313340b802afb22e3340b802afb328293240b802
afb326273240b802afb321253240b802afb31c203240b802afb2233340b8
02afb21933a0bc02af00b002af00e002afb5034003212932b8fff2b33a26
3d32bc038203820382003a0800b51f40255c331eb80381b25c6432b8ffee
b3252e3314b80381b32b2e3269be03810001008a03810001000e0381b32b
2f3210b80381b3515b320cb80381b34e513222b80381b3474d320eb80381
b246330ab80381400926473212254358320cb80381b2323310b80381b22a
3312b80381b3373d3212bb0381003d0033fff44015253d331825355b3210
2526343206252a330c252e33b8fffe4024252d330c3a2f33329925aa25ba
25c92504052536330c25323832193a293a383a03182517b80381b4282538
2504bc0381038103810025080040101f0f1f2b2e32691f781f020b1f3033
32b8fff1b31f263d32bc038003800380001f080040151f375f07af07025f
06af060222ac2b2e3209ac2f33b8ffdc400aac1f223222232b52320eb803
7fb229330eb8037fb2223314b8037fb21e2032b8ffe7b71e2b33321e2b2f
32b9ffc0037fb64c4f3232262c33410affee037f00390033fff8037f002b
0033ffea037fb23a3320b8037fb33f46321eb8037fb32f3a3212b8037fb2
2e331eb8037fb32a2d320eb8037fb2263304b8037fb3494a3404b8037fb2
463304b8037fb2213318b8037f400c1d3322263032322226333832b8fff8
400a262b2f3209261b21328abe037f0001037f037f037f00260800402e1f
371f062f063f06039f02af02bf02cf02049f03af03bf03cf03046f037f03
8f03031f032f033f034f035f03050f413a02ed0001005f02ed009f02ed00
df02ed0003002f02ed003f02ed006f02ed000300af02af0001004f02af00
9f02af0002002f02af003f02af0002003f02b00001000f02b0001f02b000
02004f02af005f02af0002002f02af003f02af0002007003b2000103b203
b202ed02ed02b002b002af02af401a370100300140010201010009010200
0800171700000012110840410b027b02230034000d013d0034000d013700
34000d011b401a340d8f340d84340d68340d59340d54340d48340d2c340d
28340d411002350020000d021b0020000d01fc0020000d01c30020000d01
500020000d012c401a200df0200dbe200d94200d79200d6a200d61200d5f
200d44200d410d013e0138000d003d0138000d00300138000d001d013800
0d01fdb40f4d0f0009bf01fd004d000d03b1037f0015001f0215b226341f
b80214b2263f1fb80208b21ebb1f41190206001e0801001f0205001f02ab
001f0204001f02ab001f0203001f0401001f02010031019a001f01fb0023
0156001f01aeb2262a1fb801adb2262a1fb801abb226341f411501a80026
02ab001f01a5001e0125001f01a400ab02ab001f01a2003102ab001f01a1
003102ab001f019db2236c1fb8019cb2236c1f4109019b00230401001f01
9a0033019a001f0176b2262e1fb8016cb231721f4111016b0023019a001f
016800240401001f014500260801001f013f00230401001f0123b21e9e1f
bc0121001e0201001f0100b426791ffd1fb80125b21ffa33b80801b21ff9
24b802abb21fe826b80101b21fe51fb8019ab21fe431b80101400b1fe331
e41fe231891fd226b80201b61fd026cd1fcd25b80401b21fb731b8019ab2
1fae26b80801b21fac1eb80401400b1f9e315e1f97269e1f9333b80801b2
1f8a24b8019ab21f831fb802ab40131f82236c1f7523e41f7026cd1f6423
721f5e25b80401b21f5d23b802abb21f55e6b80401b21f5324b80201b21f
4f33b802abb21f4e26b8040140131f4731671f4626ab1f4331cd1f3e235e
1f3a1fb80401b61f3924e41f3723b80801b21f2e23b80401b21f2a1eb801
25400b1f2923ab1f2731ab1f5537bc01c60007018a0007012b402e077f07
7107690766074b074007380736072d07220721071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b5342b0372b4bb807ff52b0382b4bb009505b58b101018e
59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b54
4218b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
40858d1bb900010159858d59590016763f183f123e113946443e11394644
3e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b
2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59
b0324b5358b0ff1d594bb04753205c58b9027d027b4544b9027c027b4544
5958b90146027d455258b9027d01464459594bb04753205c58b9001e027c
4544b90026027c45445958b9017f001e455258b9001e017f4459594bb05e
53205c58b9001f027d4544b90025027d45445958b901a8001f455258b900
1f01a84459594bb8010153205c58b1ab1f4544b11f1f45445958b9047000
ab455258b900ab04704459594bb8012553205c58b1e61f4544b11f1f4544
5958b9051000e6455258b900e605104459594bb01753205c58b124244544
b1312445445958b12224455258b124224459594bb05153205c58b1242445
44b1232445445958b17d24455258b1247d4459594bb06e53205c58b12424
4544b1332445445958b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b45695342014b5058b108004259435c58b1080042591610
703eb0124358b911b53d801bba011c03d9000b2b59b00a2342b00b234200
3f3f182b103c012f5d060cb0062342b0072342b0124358b93b21187e1bba
040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba040004
00000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b
2b59b0102342b0112342002b4bb02e5358b8016b45b02a60b8016b234459
001845694445694418456944456944737373737375757573737475757575
752b4bb026534bb03d515a58b1262645b0196044592b45186944742b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534b
b03f515a58b1070745b04060445973732b2b451869442b2b752b2b451869
4475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b
2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01
435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff00381b112332b
2b2b2b590173742b2b2b002b73752b2b732b2b2b2b2b73752b2b2b2b7300
2b2b4569442b2b0000>
[1047 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 104 15 <0001ffebfeff011000b40014002f400c001414ef3f0e017f0e010e11ba01
74000402b5b7003e0b19156df5182b4e10f44dece4ed002f5d71ed10c931
30073637363534272626272635343633321615140607154b2f2406043003
073b28293f8c85e122342825120f08300911162b3e423259b632>QJJAAA+TimesNewRoman,Italic AddT42Char 

1 0 3 <> QJJAAA+TimesNewRoman,Italic AddT42Char 
1 220 80 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>QJJAAA+TimesNewRoman,Italic AddT42Char 
1 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>QJJAAA+TimesNewRoman,Italic AddT42Char 
QJJAAA+TimesNewRoman,Italic /CharStrings get begin
/g15 15 def
/g3 3 def
/g80 80 def
end
QJJAAA+TimesNewRoman,Italic /Encoding get
dup 1 /g15 put
dup 2 /g3 put
dup 3 /g80 put
pop
end
%ADOEndSubsetFont
/NJDRFV+TimesNewRoman,Italic /QJJAAA+TimesNewRoman,Italic findfont ct_VMDictPut
/NJDRFV+TimesNewRoman,Italic*1 
[/.notdef /g15 /g3 /g80 252{/.notdef}rp]
NJDRFV+TimesNewRoman,Italic nf
NJDRFV+TimesNewRoman,Italic*1 [17.3668 0 0 -17.4 0 0 ]msf
120.352 224.428 mo
(\001\002\003)
[4.44848 4.32 0 ]xsh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
141.72 226.948 mo
(\001)sh
147.84 212.308 mo
152.64 212.308 li
152.64 259.828 li
147.84 259.828 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 119.493 140.322 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&cN!rqr;ZiUr;Zimr;ZhHr;Zg^r;Zj/_#=<7#N5R]!<_ii!!)rq!!%KH
!!#7^!!+0lrVus@_#=<7&)dEe!=/,n!!!*$q#16o"8r,u!<N,s!!*#s!!*&t!!.S"rVutKJGoNL5J[6u
!C,NA!!,=BrVus@nGWCg+8Gg8!>"u)!!*W.rVus0r;HZs#QF]&!=/W'!!*?)rVus(s8E!?"93lO!!E7O
!!!-$J,fQOs1eU7!WTq8!!3,X!!!'"&)[Ef!WV'X!!3,h!!!'"nGWCgs7$!f!WVZg!!3,prW!!!q#16o
s7lQn!WVro!!3,trW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVutKrr)luJ,]EI
!It+J!!.TKrVutKrr)luJ,]EI!e:1L!rr=Nrr)luJ,]EI!It+J!!.TKrVutKrr)luJ,]EI!It+J!!.TK
rVutKrr)luJ,K9G!It%H!!.TIrW!!!r;HZss8;ir!WW)s!!3,trW!!!q#16os7lQn!WVro!!3,prW!f8
n,NFhs6p!g!WVWh!!3,X!!!'"huE`X,QH[%!!3,8!!!-$^]4?:s1eU7"93lO!!E7O!!!-$J,fQSs8E!!
#QOc'!=/W'!!*W0rVus0r;HZs&,cD,!?_+9!!+22rVus@nGWCg5N)M@!C,NA!!.SbrVutKJGoNLs+((K
!<<#u!<N3!!!*3"rVus$q#16q#P\9!!WWc#rVus0i;N]W+2IjU!C),6!!%NI!!*#t!!*,qrVus$nGWCg
#N5R]!?Zjk!!#7^!!%EF!!)fm!!(sU!!%QJ!.Y~>

%%EndBinary
grestore
np
f
355.92 220.588 mo
355.92 208.468 365.76 198.628 377.88 198.628 cv
389.88 198.628 399.72 208.468 399.72 220.588 cv
399.72 232.588 389.88 242.428 377.88 242.428 cv
365.76 242.428 355.92 232.588 355.92 220.588 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
355.92 220.588 mo
355.92 208.468 365.76 198.628 377.88 198.628 cv
389.88 198.628 399.72 208.468 399.72 220.588 cv
399.72 232.588 389.88 242.428 377.88 242.428 cv
365.76 242.428 355.92 232.588 355.92 220.588 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
368.04 216.748 mo
379.56 216.748 li
379.56 252.028 li
368.04 252.028 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -35.28 339.693 135.882 ]ct
<<
/T 1
/W 96 
/H 294 
/M[96 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&]Dqs;JG0$E#Jg'6!=.QW!!*>opAb4!q"Xml
!!!9%pAb4!rq?Bn#QOMu!XJaUp](@#s1nC0!XJb`p](@+s7#d`!Y>>+p](@+s8;Wl!Y>>1p](F-s8N'!
q>^U.s8RWF!!<c3s1nF1!tYG3i;!?T&-)Cnq#CL-s7?$]!!<c3nbDn[!tYG$r:p<p&-).uq#CL-s6tO6
!!Ei4n3;I"!!Ei4n/oIB!!Ei4i"+cB!!FDDi!8cJ!!FDDhuiKF!!FDDhuWWL!!FDDhuWcP!!FDDhuNcQ
!!FDDhuJ9'!!OJEhuGulqZ$dAs53l!JGT<N+917!&&82C!!OJEhuF;GqZ$dAs53k^nG<1h+917!"8M`n
"[E%F!!E#n!!PUehuEfUqZ$das53kWrqc[!5QAM!!.XkG"[E%&!!%NG!!Y[f^]4@!JG]BO5QAM!!$B#S
!!,=a"Mb!;&)d?c#!`.'!!!Pfqu?pcs1eU7#OqWk#(QZg!!!,rqu?qNs1eU7"8r&s#(QZg!!!&tqu?eJ
s1nU6!<2lr!e:6crVuqJqu?eJs+((K!.XnH!e:6#rVus`JGfHLs8RWK!!46m!<)s"s8RWK!!+1Wr;Zp!
s+((K!>",e!!<3#JGoNL#N5O\!rr:NrVus(nGN=gs8RWK!!*2kr;cltr;Zj#q#16p!WW2u!!*,urW!!#
s8W#t!<N,t!!33$s82isrr)m!!WW2t!!*#t!!E?&rr<&u!!*&u!!39&s82isJ,TEL"98Au!![q'!!!-$
rqla#It.M!"98Au!![q'!!!9(rqla#J%u$a#QOf$!![qg!!!9(r;6O!J%u$a#QO`"!![r2!!!Q0r;6O!
s53kW&-)S+!!E?&huE`Y&-)S+!!`W+huEa!s7lNm#7(:u!!",@q#(0t+91g1!'gMYr;['es6p!g5QCNW
!!e#Rn,NH<s7#se#QOhn!!%NKnGWCn!WW2h!!*'!nGWCn!WW2h!!3-"nGWCn"98DjE"E!Ki;N]Z"98Dj
J,]HJi;N]V!s8N&i;NZUi;N]Y"98DZrVll5rW!''s8V"!rr2u6rW!'%s8Tk7rr2u6rW!3)s8RTL#QOgS
r;cltrW!!As+(%J!It+I!!*&s!!,=^r;Zg&qu?d'huJ9~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
379.32 232.108 mo
(\005)sh
263.4 156.268 mo
260.04 156.868 li
259.8 156.988 li
259.56 156.748 li
259.68 156.388 li
259.92 156.388 li
263.28 155.788 li
263.64 155.908 li
263.4 156.268 li
cp
257.28 157.588 mo
256.32 157.708 li
253.68 158.428 li
253.44 158.188 li
253.56 157.948 li
256.2 157.228 li
257.16 156.988 li
257.52 157.228 li
257.28 157.588 li
cp
251.16 159.148 mo
248.04 159.988 li
247.68 160.108 li
247.32 159.868 li
247.56 159.628 li
247.92 159.508 li
251.04 158.548 li
251.4 158.788 li
251.16 159.148 li
cp
245.16 160.828 mo
243.36 161.428 li
241.68 161.908 li
241.32 161.788 li
241.56 161.428 li
243.24 160.828 li
245.04 160.348 li
245.4 160.468 li
245.16 160.828 li
cp
239.16 162.748 mo
238.44 162.988 li
235.8 163.828 li
235.44 163.708 li
235.56 163.348 li
238.32 162.508 li
239.04 162.268 li
239.4 162.388 li
239.16 162.748 li
cp
233.28 164.668 mo
233.16 164.788 li
229.8 165.868 li
229.44 165.748 li
229.68 165.388 li
232.92 164.308 li
233.04 164.188 li
233.4 164.428 li
233.28 164.668 li
cp
227.4 166.828 mo
223.92 168.028 li
223.56 167.908 li
223.68 167.548 li
227.16 166.228 li
227.52 166.468 li
227.4 166.828 li
cp
221.4 168.868 mo
218.04 170.188 li
217.68 170.068 li
217.8 169.708 li
221.28 168.388 li
221.64 168.628 li
221.4 168.868 li
cp
215.64 171.148 mo
215.28 171.268 li
212.16 172.468 li
211.8 172.228 li
211.92 171.988 li
215.04 170.788 li
215.4 170.668 li
215.76 170.788 li
215.64 171.148 li
cp
209.76 173.308 mo
208.68 173.788 li
206.28 174.628 li
206.04 174.508 li
206.16 174.148 li
208.44 173.308 li
209.52 172.828 li
209.88 173.068 li
209.76 173.308 li
cp
203.88 175.588 mo
201.72 176.548 li
200.52 177.028 li
200.16 176.788 li
200.28 176.548 li
201.48 176.068 li
203.64 175.108 li
204 175.348 li
203.88 175.588 li
cp
198.12 177.988 mo
194.64 179.308 li
194.28 179.188 li
194.52 178.828 li
197.88 177.508 li
198.24 177.628 li
198.12 177.988 li
cp
192.24 180.268 mo
188.88 181.708 li
188.52 181.588 li
188.64 181.228 li
192 179.788 li
192.36 179.908 li
192.24 180.268 li
f
218.16 173.788 mo
230.52 173.788 li
230.52 161.428 li
218.16 161.428 li
cp
ef
218.16 173.788 mo
230.52 173.788 li
230.52 161.428 li
218.16 161.428 li
cp
@
231.72 172.708 mo
242.28 172.708 li
242.28 207.988 li
231.72 207.988 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[10.56 0 0 -35.28 203.374 179.922 ]ct
<<
/T 1
/W 88 
/H 294 
/M[88 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGh$r:p<p#QOh^q>^U^s8W)p!<)ot_#+04"9&6"
nGE7d&,lM.r;6Np+8l0:!!#7]rrBk5!!%NHrrDQe!;lcrq#16n!W2lsrr)lt!WN*%n,`RhJ-#]N"9/<8
!!!Q0^]4?>s8Vus!!3,X!!!9(s7$!f#ClLK!"],0_#=<=+8c*=+92@krW!--rVup?s8W#t"p+aS!$D7?
qu?nM^]6V!r;6Nu5MuN+s7lKl"V:)&J,f<A!!NW&!.Y%<qu?p%quD6HhuNZT"TACNs5<bS"?unds1nL3
"<RXDs1nL3"9nl+s1nL3"9JT's1nF1!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'qG!s&B$
JGB0Hs8RWF!!<3#JGB0HJ,b&p!!7ZM_"ds3J,d=[!!7ZM_"ds3J,fHB!!>Ics8;]n!'gJ_!:]jc!'gG^
!.atI!'gG^!;QHl![%I$rr2tKr;[$Ds54.^s7#se"s<m7!'gM_r;['5s6p!js8RWK!!a&7n,NH<s7$!f
#7pk(!!!Q0r;H[$#QOQ!!!E9$rW!!)s7lQn#QOh>!!!-$q#16u5QC3Q!!E9!rW!06s7cQo!WW)s!!EE(
rVup"!WW/t!<<)u!!3-!r;[%Os1eU7s8Mrs"s<m'!!%NKr;[$4s6p!gJ,fHI#7(;(!!#7`JGoNR"98?#
!$D5kr;['%rr<$@s1nR5#(QZ'!"]+Fr;[%Os*t(Ss5<hU#!`.'!!iP^r;[*Fs53kZs6p!g#QOi8s6p!h
s7lNm"pb1t!!*&or;[$,s7cQos8;fq"p=o#!!%NJr;[$(s82is5Q:T]"p+c%!!",@r;[''s8Duu&-%1Y
!!`K&!!!9(_#46;s8Duu"97<X!!`K'!!!'"nGN=fJ,fKJ!WVrn!!7ZM!!<3$J,K6F!It.K!!,=`r;ZkJ
s8E!!+929>!It.K!!3]2JGoNLJ,fKJ!X&J\rVutKs8E!"!WVZg!!3-!r;ZkJq#16os8Mrs#!`(e!!3-!
r;[$4s*t(Ms8;fq"p=n`!!E8rr;[$&s7cR)s7lKl!C-SdJ3X)'qu?^-rVll5qu?^!rVlkJqZ$_Js8W)p
!!<K+s7lBi"$cg9!.Y~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
242.64 187.948 mo
(\001\002)
[8.52 0 ]xsh
438.24 210.628 mo
450.6 210.628 li
450.6 198.268 li
438.24 198.268 li
cp
ef
438.24 210.628 mo
450.6 210.628 li
450.6 198.268 li
438.24 198.268 li
cp
@
444.6 204.628 mo
441.36 206.428 li
441 206.308 li
441.12 205.948 li
444.36 204.268 li
444.72 204.388 li
444.6 204.628 li
cp
439.08 207.628 mo
438.96 207.748 li
435.84 209.308 li
435.48 209.188 li
435.6 208.828 li
438.6 207.268 li
439.2 207.268 li
439.08 207.628 li
cp
433.44 210.508 mo
433.2 210.508 li
430.08 211.948 li
429.72 211.828 li
429.84 211.468 li
432.96 210.148 li
433.2 210.028 li
433.56 210.148 li
433.44 210.508 li
cp
427.68 213.028 mo
427.56 213.028 li
424.32 214.348 li
423.96 214.228 li
424.08 213.868 li
427.44 212.548 li
427.8 212.668 li
427.68 213.028 li
cp
421.8 215.308 mo
418.32 216.388 li
418.08 216.268 li
418.2 215.908 li
421.68 214.708 li
422.04 214.948 li
421.8 215.308 li
cp
415.8 217.228 mo
412.32 218.188 li
411.96 218.068 li
412.2 217.708 li
415.68 216.748 li
416.04 216.868 li
415.8 217.228 li
cp
409.8 218.908 mo
406.2 219.628 li
405.96 219.508 li
406.08 219.148 li
409.68 218.308 li
410.04 218.548 li
409.8 218.908 li
cp
403.68 220.108 mo
400.08 220.708 li
399.72 220.588 li
399.96 220.228 li
403.56 219.628 li
403.8 219.868 li
403.68 220.108 li
f
489.24 201.388 mo
485.76 202.228 li
485.4 202.108 li
485.64 201.748 li
489.12 200.908 li
489.48 201.028 li
489.24 201.388 li
cp
483.12 202.828 mo
479.64 203.548 li
479.28 203.308 li
479.52 203.068 li
483.12 202.348 li
483.36 202.588 li
483.12 202.828 li
cp
477 204.028 mo
473.4 204.628 li
473.04 204.388 li
473.28 204.028 li
476.88 203.548 li
477.24 203.788 li
477 204.028 li
cp
470.76 204.868 mo
467.16 205.228 li
466.8 204.988 li
467.04 204.748 li
470.76 204.388 li
471 204.628 li
470.76 204.868 li
cp
464.52 205.468 mo
460.92 205.588 li
460.56 205.348 li
460.8 205.108 li
464.52 204.988 li
464.76 205.228 li
464.52 205.468 li
cp
458.28 205.588 mo
454.56 205.588 li
454.32 205.348 li
454.56 205.108 li
458.28 205.108 li
458.52 205.348 li
458.28 205.588 li
cp
451.92 205.468 mo
449.64 205.348 li
448.32 205.108 li
448.08 204.868 li
448.32 204.628 li
449.76 204.748 li
452.04 204.988 li
452.28 205.228 li
451.92 205.468 li
cp
445.68 204.868 mo
444.48 204.748 li
444.24 204.388 li
444.48 204.148 li
445.8 204.388 li
446.04 204.628 li
445.68 204.868 li
f
429.24 180.748 mo
439.8 180.748 li
439.8 216.028 li
429.24 216.028 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[10.56 0 0 -35.28 400.893 171.882 ]ct
<<
/T 1
/W 88 
/H 294 
/M[88 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGh$r:p<p#QOh^q>^U^s8W)p!<)ot_#+04"9&6"
nGE7d&,lM.r;6Np+8l0:!!#7]rrBk5!!%NHrrDQe!;lcrq#16n!W2lsrr)lt!WN*%n,`RhJ-#]N"9/<8
!!!Q0^]4?>s8Vus!!3,X!!!9(s7$!f#ClLK!"],0_#=<=+8c*=+92@krW!--rVup?s8W#t"p+aS!$D7?
qu?nM^]6V!r;6Nu5MuN+s7lKl"V:)&J,f<A!!NW&!.Y%<qu?p%quD6HhuNZT"TACNs5<bS"?unds1nL3
"<RXDs1nL3"9nl+s1nL3"9JT's1nF1!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'qG!s&B$
JGB0Hs8RWF!!<3#JGB0HJ,b&p!!7ZM_"ds3J,d=[!!7ZM_"ds3J,fHB!!>Ics8;]n!'gJ_!:]jc!'gG^
!.atI!'gG^!;QHl![%I$rr2tKr;[$Ds54.^s7#se"s<m7!'gM_r;['5s6p!js8RWK!!a&7n,NH<s7$!f
#7pk(!!!Q0r;H[$#QOQ!!!E9$rW!!)s7lQn#QOh>!!!-$q#16u5QC3Q!!E9!rW!06s7cQo!WW)s!!EE(
rVup"!WW/t!<<)u!!3-!r;[%Os1eU7s8Mrs"s<m'!!%NKr;[$4s6p!gJ,fHI#7(;(!!#7`JGoNR"98?#
!$D5kr;['%rr<$@s1nR5#(QZ'!"]+Fr;[%Os*t(Ss5<hU#!`.'!!iP^r;[*Fs53kZs6p!g#QOi8s6p!h
s7lNm"pb1t!!*&or;[$,s7cQos8;fq"p=o#!!%NJr;[$(s82is5Q:T]"p+c%!!",@r;[''s8Duu&-%1Y
!!`K&!!!9(_#46;s8Duu"97<X!!`K'!!!'"nGN=fJ,fKJ!WVrn!!7ZM!!<3$J,K6F!It.K!!,=`r;ZkJ
s8E!!+929>!It.K!!3]2JGoNLJ,fKJ!X&J\rVutKs8E!"!WVZg!!3-!r;ZkJq#16os8Mrs#!`(e!!3-!
r;[$4s*t(Ms8;fq"p=n`!!E8rr;[$&s7cR)s7lKl!C-SdJ3X)'qu?^-rVll5qu?^!rVlkJqZ$_Js8W)p
!!<K+s7lBi"$cg9!.Y~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
440.16 195.988 mo
(\005\004)
[8.52002 0 ]xsh
477.36 234.868 mo
487.92 234.868 li
487.92 270.148 li
477.36 270.148 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[10.56 0 0 -35.28 449.013 117.762 ]ct
<<
/T 1
/W 88 
/H 294 
/M[88 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGh$r:p<p#QOh^q>^U^s8W)p!<)ot_#+04"9&6"
nGE7d&,lM.r;6Np+8l0:!!#7]rrBk5!!%NHrrDQe!;lcrq#16n!W2lsrr)lt!WN*%n,`RhJ-#]N"9/<8
!!!Q0^]4?>s8Vus!!3,X!!!9(s7$!f#ClLK!"],0_#=<=+8c*=+92@krW!--rVup?s8W#t"p+aS!$D7?
qu?nM^]6V!r;6Nu5MuN+s7lKl"V:)&J,f<A!!NW&!.Y%<qu?p%quD6HhuNZT"TACNs5<bS"?unds1nL3
"<RXDs1nL3"9nl+s1nL3"9JT's1nF1!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'qG!s&B$
JGB0Hs8RWF!!<3#JGB0HJ,b&p!!7ZM_"ds3J,d=[!!7ZM_"ds3J,fHB!!>Ics8;]n!'gJ_!:]jc!'gG^
!.atI!'gG^!;QHl![%I$rr2tKr;[$Ds54.^s7#se"s<m7!'gM_r;['5s6p!js8RWK!!a&7n,NH<s7$!f
#7pk(!!!Q0r;H[$#QOQ!!!E9$rW!!)s7lQn#QOh>!!!-$q#16u5QC3Q!!E9!rW!06s7cQo!WW)s!!EE(
rVup"!WW/t!<<)u!!3-!r;[%Os1eU7s8Mrs"s<m'!!%NKr;[$4s6p!gJ,fHI#7(;(!!#7`JGoNR"98?#
!$D5kr;['%rr<$@s1nR5#(QZ'!"]+Fr;[%Os*t(Ss5<hU#!`.'!!iP^r;[*Fs53kZs6p!g#QOi8s6p!h
s7lNm"pb1t!!*&or;[$,s7cQos8;fq"p=o#!!%NJr;[$(s82is5Q:T]"p+c%!!",@r;[''s8Duu&-%1Y
!!`K&!!!9(_#46;s8Duu"97<X!!`K'!!!'"nGN=fJ,fKJ!WVrn!!7ZM!!<3$J,K6F!It.K!!,=`r;ZkJ
s8E!!+929>!It.K!!3]2JGoNLJ,fKJ!X&J\rVutKs8E!"!WVZg!!3-!r;ZkJq#16os8Mrs#!`(e!!3-!
r;[$4s*t(Ms8;fq"p=n`!!E8rr;[$&s7cR)s7lKl!C-SdJ3X)'qu?^-rVll5qu?^!rVlkJqZ$_Js8W)p
!!<K+s7lBi"$cg9!.Y~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
488.28 250.108 mo
(\003\004)
[8.51999 0 ]xsh
328.68 257.068 mo
341.04 257.068 li
341.04 244.708 li
328.68 244.708 li
cp
ef
328.68 257.068 mo
341.04 257.068 li
341.04 244.708 li
328.68 244.708 li
cp
@
417.84 248.308 mo
414.48 249.868 li
414.12 249.748 li
414.24 249.388 li
417.6 247.828 li
417.72 247.828 li
417.96 247.948 li
417.84 248.308 li
cp
412.2 251.068 mo
408.84 252.508 li
408.48 252.388 li
408.6 252.028 li
411.96 250.588 li
412.32 250.708 li
412.2 251.068 li
cp
406.32 253.468 mo
402.96 254.668 li
402.6 254.548 li
402.72 254.188 li
406.2 252.988 li
406.56 253.228 li
406.32 253.468 li
cp
400.44 255.628 mo
396.96 256.588 li
396.6 256.348 li
396.72 256.108 li
400.32 255.028 li
400.56 255.268 li
400.44 255.628 li
cp
394.32 257.188 mo
390.72 257.908 li
390.48 257.788 li
390.72 257.428 li
394.2 256.708 li
394.56 256.948 li
394.32 257.188 li
cp
388.2 258.388 mo
384.6 258.868 li
384.24 258.748 li
384.48 258.388 li
388.08 257.908 li
388.44 258.148 li
388.2 258.388 li
cp
381.96 259.228 mo
378.24 259.468 li
378 259.228 li
378.24 258.868 li
381.96 258.628 li
382.2 258.868 li
381.96 259.228 li
cp
375.72 259.468 mo
372 259.468 li
371.76 259.228 li
372 258.988 li
375.72 258.988 li
375.96 259.228 li
375.72 259.468 li
cp
369.36 259.348 mo
365.76 259.108 li
365.52 258.868 li
365.76 258.628 li
369.36 258.868 li
369.72 259.108 li
369.36 259.348 li
cp
363.12 258.748 mo
359.52 258.268 li
359.28 258.028 li
359.52 257.788 li
363.24 258.268 li
363.36 258.508 li
363.12 258.748 li
cp
356.88 257.788 mo
353.4 257.188 li
353.28 257.068 li
353.16 256.828 li
353.4 256.588 li
353.52 256.588 li
357 257.308 li
357.24 257.668 li
356.88 257.788 li
cp
350.76 256.468 mo
347.28 255.508 li
347.04 255.268 li
347.4 255.028 li
350.88 255.988 li
351.12 256.228 li
350.76 256.468 li
cp
344.76 254.788 mo
341.28 253.588 li
341.04 253.348 li
341.4 253.108 li
344.88 254.188 li
345 254.548 li
344.76 254.788 li
cp
338.76 252.748 mo
335.4 251.428 li
335.16 251.068 li
335.52 250.948 li
339 252.268 li
339.12 252.508 li
338.76 252.748 li
f
334.92 251.188 mo
331.2 251.428 li
330.96 251.188 li
331.2 250.828 li
334.92 250.708 li
335.16 250.948 li
335.04 251.068 li
334.92 251.188 li
cp
328.68 251.548 mo
324.96 251.548 li
324.72 251.308 li
324.96 251.068 li
327.72 251.068 li
328.56 250.948 li
328.92 251.188 li
328.68 251.548 li
cp
322.32 251.548 mo
320.64 251.548 li
318.72 251.428 li
318.48 251.188 li
318.72 250.948 li
320.64 251.068 li
322.32 251.068 li
322.68 251.308 li
322.32 251.548 li
cp
316.08 251.308 mo
313.32 251.068 li
312.36 251.068 li
312.24 250.708 li
312.48 250.468 li
313.44 250.588 li
316.08 250.708 li
316.32 251.068 li
316.08 251.308 li
cp
309.84 250.708 mo
306.24 250.348 li
306 249.988 li
306.24 249.748 li
309.84 250.228 li
310.08 250.468 li
309.84 250.708 li
cp
303.6 249.868 mo
300 249.268 li
299.76 249.028 li
300.12 248.788 li
303.72 249.388 li
303.84 249.748 li
303.6 249.868 li
cp
297.36 248.788 mo
293.88 248.068 li
293.64 247.708 li
293.88 247.588 li
297.48 248.308 li
297.72 248.668 li
297.36 248.788 li
cp
291.24 247.468 mo
287.76 246.508 li
287.52 246.268 li
287.88 246.028 li
291.36 246.988 li
291.6 247.348 li
291.24 247.468 li
cp
285.24 245.908 mo
284.16 245.548 li
281.64 244.828 li
281.52 244.468 li
281.88 244.348 li
284.28 245.068 li
285.36 245.308 li
285.48 245.668 li
285.24 245.908 li
cp
279.24 243.988 mo
276.84 243.268 li
275.76 242.908 li
275.52 242.548 li
275.88 242.308 li
276.96 242.788 li
279.36 243.508 li
279.48 243.868 li
279.24 243.988 li
cp
273.24 241.948 mo
269.88 240.628 li
269.64 240.388 li
270 240.148 li
273.48 241.468 li
273.6 241.828 li
273.24 241.948 li
cp
267.36 239.668 mo
264 238.228 li
263.88 237.988 li
264.24 237.748 li
267.6 239.188 li
267.72 239.548 li
267.36 239.668 li
cp
261.6 237.268 mo
258.24 235.708 li
258.12 235.348 li
258.48 235.228 li
261.84 236.788 li
261.96 237.148 li
261.6 237.268 li
cp
255.96 234.628 mo
254.4 233.908 li
252.6 232.948 li
252.48 232.588 li
252.84 232.468 li
254.64 233.428 li
256.2 234.148 li
256.32 234.508 li
255.96 234.628 li
cp
250.32 231.748 mo
247.08 230.068 li
246.96 229.708 li
247.32 229.588 li
250.56 231.268 li
250.68 231.628 li
250.32 231.748 li
cp
244.8 228.748 mo
241.56 226.948 li
241.56 226.588 li
241.92 226.468 li
245.04 228.388 li
245.16 228.628 li
244.8 228.748 li
cp
239.28 225.628 mo
236.16 223.828 li
236.16 223.468 li
236.52 223.348 li
239.64 225.268 li
239.64 225.628 li
239.28 225.628 li
cp
234 222.388 mo
231.72 221.068 li
230.88 220.468 li
230.76 220.108 li
231.12 219.988 li
232.08 220.588 li
234.24 221.908 li
234.36 222.268 li
234 222.388 li
cp
228.72 219.028 mo
225.6 216.988 li
225.6 216.628 li
225.96 216.508 li
228.96 218.548 li
229.08 218.908 li
228.72 219.028 li
cp
223.44 215.548 mo
220.56 213.388 li
220.44 213.028 li
220.8 212.908 li
223.8 215.068 li
223.8 215.428 li
223.44 215.548 li
cp
218.4 211.828 mo
216.48 210.508 li
215.4 209.668 li
215.4 209.308 li
215.76 209.308 li
216.84 210.148 li
218.64 211.468 li
218.76 211.828 li
218.4 211.828 li
cp
213.36 208.108 mo
210.36 205.948 li
210.36 205.588 li
210.72 205.468 li
213.6 207.748 li
213.72 208.108 li
213.36 208.108 li
f
321.24 264.268 mo
331.8 264.268 li
331.8 299.548 li
321.24 299.548 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[10.56 0 0 -35.28 292.893 88.362 ]ct
<<
/T 1
/W 88 
/H 294 
/M[88 0 0 -294 0 294 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcGh$r:p<p#QOh^q>^U^s8W)p!<)ot_#+04"9&6"
nGE7d&,lM.r;6Np+8l0:!!#7]rrBk5!!%NHrrDQe!;lcrq#16n!W2lsrr)lt!WN*%n,`RhJ-#]N"9/<8
!!!Q0^]4?>s8Vus!!3,X!!!9(s7$!f#ClLK!"],0_#=<=+8c*=+92@krW!--rVup?s8W#t"p+aS!$D7?
qu?nM^]6V!r;6Nu5MuN+s7lKl"V:)&J,f<A!!NW&!.Y%<qu?p%quD6HhuNZT"TACNs5<bS"?unds1nL3
"<RXDs1nL3"9nl+s1nL3"9JT's1nF1!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'nF!rr:Nq#CKrs+'qG!s&B$
JGB0Hs8RWF!!<3#JGB0HJ,b&p!!7ZM_"ds3J,d=[!!7ZM_"ds3J,fHB!!>Ics8;]n!'gJ_!:]jc!'gG^
!.atI!'gG^!;QHl![%I$rr2tKr;[$Ds54.^s7#se"s<m7!'gM_r;['5s6p!js8RWK!!a&7n,NH<s7$!f
#7pk(!!!Q0r;H[$#QOQ!!!E9$rW!!)s7lQn#QOh>!!!-$q#16u5QC3Q!!E9!rW!06s7cQo!WW)s!!EE(
rVup"!WW/t!<<)u!!3-!r;[%Os1eU7s8Mrs"s<m'!!%NKr;[$4s6p!gJ,fHI#7(;(!!#7`JGoNR"98?#
!$D5kr;['%rr<$@s1nR5#(QZ'!"]+Fr;[%Os*t(Ss5<hU#!`.'!!iP^r;[*Fs53kZs6p!g#QOi8s6p!h
s7lNm"pb1t!!*&or;[$,s7cQos8;fq"p=o#!!%NJr;[$(s82is5Q:T]"p+c%!!",@r;[''s8Duu&-%1Y
!!`K&!!!9(_#46;s8Duu"97<X!!`K'!!!'"nGN=fJ,fKJ!WVrn!!7ZM!!<3$J,K6F!It.K!!,=`r;ZkJ
s8E!!+929>!It.K!!3]2JGoNLJ,fKJ!X&J\rVutKs8E!"!WVZg!!3-!r;ZkJq#16os8Mrs#!`(e!!3-!
r;[$4s*t(Ms8;fq"p=n`!!E8rr;[$&s7cR)s7lKl!C-SdJ3X)'qu?^-rVll5qu?^!rVlkJqZ$_Js8W)p
!!<K+s7lBi"$cg9!.Y~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFT+TimesNewRoman*1 [17.0076 0 0 -17.04 0 0 ]msf
332.16 279.508 mo
(\001\003)
[8.52002 0 ]xsh
304.08 63.148 mo
304.08 52.7081 312.6 44.188 323.04 44.188 cv
333.6 44.188 342.12 52.7081 342.12 63.148 cv
342.12 73.708 333.6 82.2281 323.04 82.2281 cv
312.6 82.2281 304.08 73.708 304.08 63.148 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
304.08 63.148 mo
304.08 52.7081 312.6 44.188 323.04 44.188 cv
333.6 44.188 342.12 52.7081 342.12 63.148 cv
342.12 73.708 333.6 82.2281 323.04 82.2281 cv
312.6 82.2281 304.08 73.708 304.08 63.148 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
313.68 59.428 mo
329.04 59.428 li
329.04 110.908 li
313.68 110.908 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[15.36 0 0 -51.48 285.333 293.202 ]ct
<<
/T 1
/W 128 
/H 429 
/M[128 0 0 -429 0 429 ]
/BC 1 
/D[1 0 ]
/DS [cf /ASCII85Decode fl dup<</K -1 /Columns 128 >>/CCITTFaxDecode fl]
/O 1
>>
%%BeginBinary: 1
img
-D?M?s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W,\8.Q+m9iiShOG5GtD/ZiZrr9J-^OO#mqtL!^qu;/\J%taTp\U%H4GXZTL_)?25kbOJ
-W#BbO;JL:!tU&(i@t*;m5NK)_gAl[p><?kIG_NGICJ[YqgGsJ]Ct.=n+YRdmb`6W^&.PRmb`N'^\?L_
^%VJQJ%sjts)7Y@s51TGpODT/s6]d`s6T$C`Ve5XmB5j.D>r8dIbSR`&,+W-Bkag'fO6@7csB(;_I8>^
CYJ,4K=-e@<Z9%.N"';51^kpf4Mc`54i%Q65Qh'P~>
%%EndBinary
grestore
np
f
323.04 82.2281 mo
186.72 182.308 li
.750179 .679652 .670191 .901488 cmyk
@
270.12 121.348 mo
282.36 121.348 li
282.36 108.988 li
270.12 108.988 li
cp
ef
270.12 121.348 mo
282.36 121.348 li
282.36 108.988 li
270.12 108.988 li
cp
@
220.56 103.468 mo
230.16 103.468 li
230.16 126.868 li
220.56 126.868 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[9.6 0 0 -23.4 192.214 249.162 ]ct
<<
/T 1
/W 80 
/H 195 
/M[80 0 0 -195 0 195 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&irB)bi;N]W+8Gg8!?_7=!%7gHJ,fR6rVup!s8V!W!.Y$!!!iQ(p](;D
s1eUFs8W&u!<<)W!$D4?"onZ's6p"1rr3tR!.Xo+!'gMQ+5d-Kr#>]ds1ea+!.XtV!.Y$!0E?=tJ,TWP
J,]KK490m1!s&B#!!!K/J,TNMs82is#67!g!<E/t!!!'#5Q:]`s8;fq"[E"e!<;im!!OJEJ,oWEr;[!C
s*t+Lq#(0r+9-iks7lNm"V:W`!<;im!!No5^]=E0r;[!3s1eVaq#(0p#QMR>!IsnC!!NW-huJ9%r;[!+
s53m,r;?U!#QN]^5Q(H["U"eo!'gD[!!NK)n,P]Nr;[!'s6p"1rqug#!WVWh+9)3="TeYu!"])-!!NE'
p](j)qu?m"p](R!qu@E1qu@!%!!")@!<;rs"93lO5JR8JJ,B9Is*t*!huJ9)!!3,8!<:sWJ,TEJs1eX7
n,Rt;!!%N,!<;Ng5Q1W_5O\[Qp]*PY!!",9!.XbD5Q:]`&,6-Sp])E9!!!9%!'g5Y+9)<@"9&9Bp^dE)
qu?ct!"\i8s8Vus!.Vchn-B!nrVup_i!8`Vs8W&u!"\u<+5d8$s8Duu"98D:!.Y%KrW!0&rr<$@s5<kV
"qUJ/!!iP^q>^R!s7#ga!WVZb!!.T=q#CF;nG*%b&,>r#!=/Dq!!*2sq#CErr:g6mquHNm!.=PA!'L#V
!$:n8!"Sl+J,~>

%%EndBinary
grestore
np
f
229.56 109.228 mo
232.44 109.228 li
232.44 121.108 li
229.56 121.108 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[2.88 0 0 -11.88 201.214 243.402 ]ct
<<
/T 1
/W 24 
/H 99 
/M[24 0 0 -99 0 99 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcN@^2a@?Cp](;C!!")@!"ZjF"5j.Zp](;A!!#1_!$;1@++O>%^]4n\!"[uf+7K7Pn,P]J!.XbDs!mdE
s83!!qucus#QO],s83-%r!39"#QO],s7c]rp]:Ea!WV'XJ%u%+!.Y~>

%%EndBinary
grestore
np
f
234.24 102.388 mo
246.72 102.388 li
246.72 136.948 li
234.24 136.948 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[12.48 0 0 -34.56 205.893 250.242 ]ct
<<
/T 1
/W 104 
/H 288 
/M[104 0 0 -288 0 288 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMqR!=/Dn!!48BJG0$FJ,eI$!!Ielp](<i
!!<2\r:^0ms7-*_!!<2is7ZKqs7$&=p](DGn:/7K!!@`?J)L)%"$b^.nFutc%tHn6p&G+Xq"=[g+8GO0
!?_75!!+2@p&G+8rq6<m&-)>'!>#5(!!*W1p&G.)s+'hD!XJaUpAb7"s1nU6!tYA2!<)s"#QMU=!!7ZM
_#46=#QMR>!!3-"q#(0u"979Z!!E9$rqug#"979Z!!iN'r;[!'s53kW&,uS/_#=<;!WVWh!"])/!9!hV
#m((q!!",@n.5$f!!r]+n,NG1s1e[1rW!6*s7cQo+9-ikI/O$Ks7cQo5Q:e8!$;(=#ljZ"!'gJ`!!iH&
$30o'!'gJ`!!@cN!!n)P!!#7_!!!&u!!RlM!!#7_q>^\KrVup_rqZTuJ,TEJ5Q:KZ"[Dtd!'gJZ!!PUd
!!#7_q>^[`rr<$`rqZTr+9)<B!$D4:!!OJE!!",?q>^^Arr<$@s7#mc#9Wtr!$D7@JG]BP&-%.[&-)\)
qu?s4s*t([ru_7<!!j,8^]4oF"93oM!!j,8^]4W>JH+R+!!ii0^]4W>J3Wi-!!ii0^]4K:J04^f!!ii0
huElZ^^pGC!!i],huEfX^^'o<!!rc-huEfXhuj"0rW!6,s6p!gs54"Z_#=<?"97ij!.XJ=s5<kV#m((q
!!%N<!<;!V!!r]+n,NGQp]1?`rW!6*s7cQo+8>hcq#(0us7cQo&,ZEWq#(0us7cQo#Q+ROq#(0us82is
"9&9br;?U$s82is!WN-ar;?TrJ,K9G"93m9r;?TrJ,K9G"+Phcr;H[&5QCc]!!#7!5Q(K\#s\IirVup/
n3?jM!!sbIs8Duu"8IB@rW!6Hs8W&u!!3-"q#16n+9)<>!!5CbnGWCf&,uV.!!3]2i;EWWs8RWJ!!3+M
r;Zm`s+'hD![%GmpAb7*s1n@/!XJb@pAb7"s1n@/!X&J\pAb6ss5<VO!Wi>jp&G-nnFch_s7l9f!Isn<
!!>I`!.=PA"!@F@s7cQr&,lV0p](F-rW3%Lq#CO&rrN.Mq#CO"s+13#p](Er_#Jr]!!N?&J)Gg,p](@;
pj`#<!Y>>1pAb6qs8;Qj!C-)P!.Y~>

%%EndBinary
grestore
np
f
246.24 109.228 mo
249.12 109.228 li
249.12 121.108 li
246.24 121.108 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[2.88 0 0 -11.88 217.893 243.402 ]ct
<<
/T 1
/W 24 
/H 99 
/M[24 0 0 -99 0 99 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcN@^2a@?Cp](;C!!")@!"ZjF"5j.Zp](;A!!#1_!$;1@++O>%^]4n\!"[uf+7K7Pn,P]J!.XbDs!mdE
s83!!qucus#QO],s83-%r!39"#QO],s7c]rp]:Ea!WV'XJ%u%+!.Y~>

%%EndBinary
grestore
np
f
252.96 105.148 mo
264.48 105.148 li
264.48 123.508 li
252.96 123.508 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[11.52 0 0 -18.36 224.613 247.482 ]ct
<<
/T 1
/W 96 
/H 153 
/M[96 0 0 -153 0 153 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcN"T!e:ORr;ZkJi;N]^^jlB7!!!-$rr)osrt=5i!!iQ(J,fS!r"&Q&!$D7@
i#i""J+*R<!!#7`s7cQoJ)CA-!!%NKs82isIt.S"!!%NJs&oC&It.P!J,oWL^jgk7IfKKK^]FK8!"ZjF
4obT_^]FK7!!2!X4obT_huWlU!!)Kg49,B]huj#S!!"tY49,E^n,r^[!!!u=2uj!Zn,r^[!!!9)2uj!Z
n,`^lnGN=l(]X[<n,r^Kr;['6!!iPn"97<X!!a&8&-),$s5<bS"V:Y&"97<V!!OJEn,r^KqZ$das54"Z
i;3KXJ,eF-s5<bS"onV\!WV*U!!WK(s1e[8i;<QZ"98CO!WVZf!!`K+s8RTLs7#pd"pb2.!!*&gqu?p3
s8Duus7#pd"s<mC!!%NDqu?pCs82isJ,&pA#!`._!!#7Yqu?qNs6p!g5Q(EZ#(Q[2!!",=qu@aes1eU7
+8c*=HiO0Hs*t(L&,lP/rr<'!rr<*##CcXP!WRZMs8E!"!!iN("93lOs82iu!!E6$"96.:s82j%!!3+M
"96.:s7cR!!!*&7"979Zs6p!n!!%N,!WV'XJ+*FK!!#7A!WV'XJ+*FK!!",1!<:sWJ+*F[J,g,T!.Wo,
5O\Y;J,fiP!'fBA+8>hcJ,fWM!$AuV%i>-Es*t(Ls*u3,!!iK.s*t(L5Oa/Q!!E6#"i(*<&-)\/!!rW)
_8$$N"98;u!!<c0!'pM`!^GTCJ,~>

%%EndBinary
grestore
np
f
323.04 82.2281 mo
285.24 134.068 li
.750179 .679652 .670191 .901488 cmyk
@
323.04 82.2281 mo
439.56 226.108 li
@
323.04 82.2281 mo
510.84 179.428 li
@
297.84 118.228 mo
310.2 118.228 li
310.2 105.868 li
297.84 105.868 li
cp
ef
297.84 118.228 mo
310.2 118.228 li
310.2 105.868 li
297.84 105.868 li
cp
@
337.92 133.588 mo
350.28 133.588 li
350.28 121.348 li
337.92 121.348 li
cp
ef
337.92 133.588 mo
350.28 133.588 li
350.28 121.348 li
337.92 121.348 li
cp
@
337.92 115.108 mo
350.28 115.108 li
350.28 102.748 li
337.92 102.748 li
cp
ef
337.92 115.108 mo
350.28 115.108 li
350.28 102.748 li
337.92 102.748 li
cp
@
378.12 121.348 mo
390.48 121.348 li
390.48 108.988 li
378.12 108.988 li
cp
ef
378.12 121.348 mo
390.48 121.348 li
390.48 108.988 li
378.12 108.988 li
cp
@
306.6 157.228 mo
380.16 157.228 li
380.16 135.028 li
306.6 135.028 li
cp
.175509 .175479 3.0518e-5 3.0518e-5 cmyk
ef
306.6 157.228 mo
380.16 157.228 li
380.16 135.028 li
306.6 135.028 li
cp
.750179 .679652 .670191 .901488 cmyk
@
315.96 139.228 mo
320.76 139.228 li
320.76 186.748 li
315.96 186.748 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 287.613 213.402 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&b5_MDr;Zg-r;Zg]r;ZhFrVus"q#16o"7Z9i!>!!F!!+0lrVup_r;ZhH
rVus"r;HZs"8Miq!=/,n!!*W"rVus@i;N]W+2IjU!C),6!!.S"rVururVus"rr)lu!WN&u!<`9!!!*?&
rVus0q#16o&,?,(!?^h1!!+22rVus`nGWCgJ)L;+!Is&,!!3,XrW"AH^]4?8s1eU7!WTq8!!3,8!!!-$
J,fQOs*t(L#QK;S!!iOS!!!9(rW!$2rr<$#!"],/!!*W1rVus@s8E!!+92<?!?_=?!!,=`rVus`rr)lu
5Q:W^!C-S_!!,=`rVutKrr)luJ,]EI!It+J!!.TIrVutKr;HZsJ,K9G!WW)s!!3,trW!!!r;HZss8;ir
!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!*$!r;HZss8;ir!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!3,t
rW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVus`rr)lu5Q:W^!C-S_!!,=`rVus@
rr)lu+9)6>!?_@@!!+2ArVus0s8E!"&,uV3!!!Q0rVus(s8E!;#QK;S!!E7O!!!-$J,fQOs*t(L!WTq8
!!3,8rW!!!_#=<7s1nU6!Is&,!!.T-rVus`i;N]W5OeXP!?^h1!!*W*rVus0q#16o#Pe8u!<`9!!!*3"
rVus"rqufsrqufsJ,K?JIt7Lu!^D28!rr<C_#=<7&)dEe!=/,n!!*2krVus"q#(0mr;?TqIf06I++X=j
!>!!F!!*>_rVus"q#(0mr;?Tq55bH]%fHA-!e:~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFU+TimesNewRoman,BoldItalic*1 [17.3668 0 0 -17.4 0 0 ]msf
321.24 151.348 mo
(\001)sh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
332.88 153.868 mo
(\002)sh
NJDRFV+TimesNewRoman,Italic*1 [17.3668 0 0 -17.4 0 0 ]msf
338.512 151.348 mo
(\001\002\003)
[4.32849 4.31998 0 ]xsh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
359.76 153.868 mo
(\002)sh
365.88 139.228 mo
370.68 139.228 li
370.68 186.748 li
365.88 186.748 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 337.534 213.402 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&cN!rqr;ZiUr;Zimr;ZhHr;Zg^r;Zj/_#=<7#N5R]!<_ii!!)rq!!%KH
!!#7^!!+0lrVus@_#=<7&)dEe!=/,n!!!*$q#16o"8r,u!<N,s!!*#s!!*&t!!.S"rVutKJGoNL5J[6u
!C,NA!!,=BrVus@nGWCg+8Gg8!>"u)!!*W.rVus0r;HZs#QF]&!=/W'!!*?)rVus(s8E!?"93lO!!E7O
!!!-$J,fQOs1eU7!WTq8!!3,X!!!'"&)[Ef!WV'X!!3,h!!!'"nGWCgs7$!f!WVZg!!3,prW!!!q#16o
s7lQn!WVro!!3,trW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVutKrr)luJ,]EI
!It+J!!.TKrVutKrr)luJ,]EI!e:1L!rr=Nrr)luJ,]EI!It+J!!.TKrVutKrr)luJ,]EI!It+J!!.TK
rVutKrr)luJ,K9G!It%H!!.TIrW!!!r;HZss8;ir!WW)s!!3,trW!!!q#16os7lQn!WVro!!3,prW!f8
n,NFhs6p!g!WVWh!!3,X!!!'"huE`X,QH[%!!3,8!!!-$^]4?:s1eU7"93lO!!E7O!!!-$J,fQSs8E!!
#QOc'!=/W'!!*W0rVus0r;HZs&,cD,!?_+9!!+22rVus@nGWCg5N)M@!C,NA!!.SbrVutKJGoNLs+((K
!<<#u!<N3!!!*3"rVus$q#16q#P\9!!WWc#rVus0i;N]W+2IjU!C),6!!%NI!!*#t!!*,qrVus$nGWCg
#N5R]!?Zjk!!#7^!!%EF!!)fm!!(sU!!%QJ!.Y~>

%%EndBinary
grestore
np
f
343.44 196.468 mo
416.88 196.468 li
416.88 174.268 li
343.44 174.268 li
cp
.175509 .175479 3.0518e-5 3.0518e-5 cmyk
ef
343.44 196.468 mo
416.88 196.468 li
416.88 174.268 li
343.44 174.268 li
cp
.750179 .679652 .670191 .901488 cmyk
@
352.68 178.468 mo
357.48 178.468 li
357.48 225.988 li
352.68 225.988 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 324.333 174.162 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&b5_MDr;Zg-r;Zg]r;ZhFrVus"q#16o"7Z9i!>!!F!!+0lrVup_r;ZhH
rVus"r;HZs"8Miq!=/,n!!*W"rVus@i;N]W+2IjU!C),6!!.S"rVururVus"rr)lu!WN&u!<`9!!!*?&
rVus0q#16o&,?,(!?^h1!!+22rVus`nGWCgJ)L;+!Is&,!!3,XrW"AH^]4?8s1eU7!WTq8!!3,8!!!-$
J,fQOs*t(L#QK;S!!iOS!!!9(rW!$2rr<$#!"],/!!*W1rVus@s8E!!+92<?!?_=?!!,=`rVus`rr)lu
5Q:W^!C-S_!!,=`rVutKrr)luJ,]EI!It+J!!.TIrVutKr;HZsJ,K9G!WW)s!!3,trW!!!r;HZss8;ir
!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!*$!r;HZss8;ir!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!3,t
rW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVus`rr)lu5Q:W^!C-S_!!,=`rVus@
rr)lu+9)6>!?_@@!!+2ArVus0s8E!"&,uV3!!!Q0rVus(s8E!;#QK;S!!E7O!!!-$J,fQOs*t(L!WTq8
!!3,8rW!!!_#=<7s1nU6!Is&,!!.T-rVus`i;N]W5OeXP!?^h1!!*W*rVus0q#16o#Pe8u!<`9!!!*3"
rVus"rqufsrqufsJ,K?JIt7Lu!^D28!rr<C_#=<7&)dEe!=/,n!!*2krVus"q#(0mr;?TqIf06I++X=j
!>!!F!!*>_rVus"q#(0mr;?Tq55bH]%fHA-!e:~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFU+TimesNewRoman,BoldItalic*1 [17.3668 0 0 -17.4 0 0 ]msf
357.96 190.588 mo
(\001)sh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
369.6 192.988 mo
(\005)sh
NJDRFV+TimesNewRoman,Italic*1 [17.3668 0 0 -17.4 0 0 ]msf
375.232 190.588 mo
(\001\002\003)
[4.32849 4.31998 0 ]xsh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
396.48 192.988 mo
(\005)sh
402.6 178.468 mo
407.4 178.468 li
407.4 225.988 li
402.6 225.988 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 374.254 174.162 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&cN!rqr;ZiUr;Zimr;ZhHr;Zg^r;Zj/_#=<7#N5R]!<_ii!!)rq!!%KH
!!#7^!!+0lrVus@_#=<7&)dEe!=/,n!!!*$q#16o"8r,u!<N,s!!*#s!!*&t!!.S"rVutKJGoNL5J[6u
!C,NA!!,=BrVus@nGWCg+8Gg8!>"u)!!*W.rVus0r;HZs#QF]&!=/W'!!*?)rVus(s8E!?"93lO!!E7O
!!!-$J,fQOs1eU7!WTq8!!3,X!!!'"&)[Ef!WV'X!!3,h!!!'"nGWCgs7$!f!WVZg!!3,prW!!!q#16o
s7lQn!WVro!!3,trW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVutKrr)luJ,]EI
!It+J!!.TKrVutKrr)luJ,]EI!e:1L!rr=Nrr)luJ,]EI!It+J!!.TKrVutKrr)luJ,]EI!It+J!!.TK
rVutKrr)luJ,K9G!It%H!!.TIrW!!!r;HZss8;ir!WW)s!!3,trW!!!q#16os7lQn!WVro!!3,prW!f8
n,NFhs6p!g!WVWh!!3,X!!!'"huE`X,QH[%!!3,8!!!-$^]4?:s1eU7"93lO!!E7O!!!-$J,fQSs8E!!
#QOc'!=/W'!!*W0rVus0r;HZs&,cD,!?_+9!!+22rVus@nGWCg5N)M@!C,NA!!.SbrVutKJGoNLs+((K
!<<#u!<N3!!!*3"rVus$q#16q#P\9!!WWc#rVus0i;N]W+2IjU!C),6!!%NI!!*#t!!*,qrVus$nGWCg
#N5R]!?Zjk!!#7^!!%EF!!)fm!!(sU!!%QJ!.Y~>

%%EndBinary
grestore
np
f
411.96 294.388 mo
485.4 294.388 li
485.4 272.308 li
411.96 272.308 li
cp
.175509 .175479 3.0518e-5 3.0518e-5 cmyk
ef
411.96 294.388 mo
485.4 294.388 li
485.4 272.308 li
411.96 272.308 li
cp
.750179 .679652 .670191 .901488 cmyk
@
421.32 276.388 mo
426.12 276.388 li
426.12 323.908 li
421.32 323.908 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 392.973 76.242 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&b5_MDr;Zg-r;Zg]r;ZhFrVus"q#16o"7Z9i!>!!F!!+0lrVup_r;ZhH
rVus"r;HZs"8Miq!=/,n!!*W"rVus@i;N]W+2IjU!C),6!!.S"rVururVus"rr)lu!WN&u!<`9!!!*?&
rVus0q#16o&,?,(!?^h1!!+22rVus`nGWCgJ)L;+!Is&,!!3,XrW"AH^]4?8s1eU7!WTq8!!3,8!!!-$
J,fQOs*t(L#QK;S!!iOS!!!9(rW!$2rr<$#!"],/!!*W1rVus@s8E!!+92<?!?_=?!!,=`rVus`rr)lu
5Q:W^!C-S_!!,=`rVutKrr)luJ,]EI!It+J!!.TIrVutKr;HZsJ,K9G!WW)s!!3,trW!!!r;HZss8;ir
!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!*$!r;HZss8;ir!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!3,t
rW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVus`rr)lu5Q:W^!C-S_!!,=`rVus@
rr)lu+9)6>!?_@@!!+2ArVus0s8E!"&,uV3!!!Q0rVus(s8E!;#QK;S!!E7O!!!-$J,fQOs*t(L!WTq8
!!3,8rW!!!_#=<7s1nU6!Is&,!!.T-rVus`i;N]W5OeXP!?^h1!!*W*rVus0q#16o#Pe8u!<`9!!!*3"
rVus"rqufsrqufsJ,K?JIt7Lu!^D28!rr<C_#=<7&)dEe!=/,n!!*2krVus"q#(0mr;?TqIf06I++X=j
!>!!F!!*>_rVus"q#(0mr;?Tq55bH]%fHA-!e:~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFU+TimesNewRoman,BoldItalic*1 [17.3668 0 0 -17.4 0 0 ]msf
426.48 288.508 mo
(\001)sh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
438.12 291.028 mo
(\003)sh
NJDRFV+TimesNewRoman,Italic*1 [17.3668 0 0 -17.4 0 0 ]msf
443.872 288.508 mo
(\001\002\003)
[4.32849 4.31998 0 ]xsh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
465.12 291.028 mo
(\003)sh
471.24 276.388 mo
476.04 276.388 li
476.04 323.908 li
471.24 323.908 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 442.893 76.242 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&cN!rqr;ZiUr;Zimr;ZhHr;Zg^r;Zj/_#=<7#N5R]!<_ii!!)rq!!%KH
!!#7^!!+0lrVus@_#=<7&)dEe!=/,n!!!*$q#16o"8r,u!<N,s!!*#s!!*&t!!.S"rVutKJGoNL5J[6u
!C,NA!!,=BrVus@nGWCg+8Gg8!>"u)!!*W.rVus0r;HZs#QF]&!=/W'!!*?)rVus(s8E!?"93lO!!E7O
!!!-$J,fQOs1eU7!WTq8!!3,X!!!'"&)[Ef!WV'X!!3,h!!!'"nGWCgs7$!f!WVZg!!3,prW!!!q#16o
s7lQn!WVro!!3,trW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVutKrr)luJ,]EI
!It+J!!.TKrVutKrr)luJ,]EI!e:1L!rr=Nrr)luJ,]EI!It+J!!.TKrVutKrr)luJ,]EI!It+J!!.TK
rVutKrr)luJ,K9G!It%H!!.TIrW!!!r;HZss8;ir!WW)s!!3,trW!!!q#16os7lQn!WVro!!3,prW!f8
n,NFhs6p!g!WVWh!!3,X!!!'"huE`X,QH[%!!3,8!!!-$^]4?:s1eU7"93lO!!E7O!!!-$J,fQSs8E!!
#QOc'!=/W'!!*W0rVus0r;HZs&,cD,!?_+9!!+22rVus@nGWCg5N)M@!C,NA!!.SbrVutKJGoNLs+((K
!<<#u!<N3!!!*3"rVus$q#16q#P\9!!WWc#rVus0i;N]W+2IjU!C),6!!%NI!!*#t!!*,qrVus$nGWCg
#N5R]!?Zjk!!#7^!!%EF!!)fm!!(sU!!%QJ!.Y~>

%%EndBinary
grestore
np
f
480.6 176.788 mo
554.04 176.788 li
554.04 154.708 li
480.6 154.708 li
cp
.175509 .175479 3.0518e-5 3.0518e-5 cmyk
ef
480.6 176.788 mo
554.04 176.788 li
554.04 154.708 li
480.6 154.708 li
cp
.750179 .679652 .670191 .901488 cmyk
@
489.96 158.788 mo
494.76 158.788 li
494.76 206.308 li
489.96 206.308 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 461.613 193.842 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&b5_MDr;Zg-r;Zg]r;ZhFrVus"q#16o"7Z9i!>!!F!!+0lrVup_r;ZhH
rVus"r;HZs"8Miq!=/,n!!*W"rVus@i;N]W+2IjU!C),6!!.S"rVururVus"rr)lu!WN&u!<`9!!!*?&
rVus0q#16o&,?,(!?^h1!!+22rVus`nGWCgJ)L;+!Is&,!!3,XrW"AH^]4?8s1eU7!WTq8!!3,8!!!-$
J,fQOs*t(L#QK;S!!iOS!!!9(rW!$2rr<$#!"],/!!*W1rVus@s8E!!+92<?!?_=?!!,=`rVus`rr)lu
5Q:W^!C-S_!!,=`rVutKrr)luJ,]EI!It+J!!.TIrVutKr;HZsJ,K9G!WW)s!!3,trW!!!r;HZss8;ir
!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!*$!r;HZss8;ir!WW)s!!3,trW!!!r;HZss8;ir!WW)s!!3,t
rW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVus`rr)lu5Q:W^!C-S_!!,=`rVus@
rr)lu+9)6>!?_@@!!+2ArVus0s8E!"&,uV3!!!Q0rVus(s8E!;#QK;S!!E7O!!!-$J,fQOs*t(L!WTq8
!!3,8rW!!!_#=<7s1nU6!Is&,!!.T-rVus`i;N]W5OeXP!?^h1!!*W*rVus0q#16o#Pe8u!<`9!!!*3"
rVus"rqufsrqufsJ,K?JIt7Lu!^D28!rr<C_#=<7&)dEe!=/,n!!*2krVus"q#(0mr;?TqIf06I++X=j
!>!!F!!*>_rVus"q#(0mr;?Tq55bH]%fHA-!e:~>

%%EndBinary
grestore
np
f
.750179 .679652 .670191 .901488 cmyk
NJDRFU+TimesNewRoman,BoldItalic*1 [17.3668 0 0 -17.4 0 0 ]msf
495.12 170.908 mo
(\001)sh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
506.76 173.428 mo
(\004)sh
NJDRFV+TimesNewRoman,Italic*1 [17.3668 0 0 -17.4 0 0 ]msf
512.392 170.908 mo
(\001\002\003)
[4.32849 4.44 0 ]xsh
NJDRFT+TimesNewRoman*1 [11.2584 0 0 -11.28 0 0 ]msf
533.76 173.428 mo
(\004)sh
539.88 158.788 mo
544.68 158.788 li
544.68 206.308 li
539.88 206.308 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 28.3465 352.63 ]ct
[4.8 0 0 -47.52 511.534 193.842 ]ct
<<
/T 1
/W 40 
/H 396 
/M[40 0 0 -396 0 396 ]
/BC 1 
/D[1 0 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&cN!rqr;ZiUr;Zimr;ZhHr;Zg^r;Zj/_#=<7#N5R]!<_ii!!)rq!!%KH
!!#7^!!+0lrVus@_#=<7&)dEe!=/,n!!!*$q#16o"8r,u!<N,s!!*#s!!*&t!!.S"rVutKJGoNL5J[6u
!C,NA!!,=BrVus@nGWCg+8Gg8!>"u)!!*W.rVus0r;HZs#QF]&!=/W'!!*?)rVus(s8E!?"93lO!!E7O
!!!-$J,fQOs1eU7!WTq8!!3,X!!!'"&)[Ef!WV'X!!3,h!!!'"nGWCgs7$!f!WVZg!!3,prW!!!q#16o
s7lQn!WVro!!3,trW!!!r;HZsJ,K9G!It%H!!.TIrVutKr;HZsJ,K9G!It+J!!.TKrVutKrr)luJ,]EI
!It+J!!.TKrVutKrr)luJ,]EI!e:1L!rr=Nrr)luJ,]EI!It+J!!.TKrVutKrr)luJ,]EI!It+J!!.TK
rVutKrr)luJ,K9G!It%H!!.TIrW!!!r;HZss8;ir!WW)s!!3,trW!!!q#16os7lQn!WVro!!3,prW!f8
n,NFhs6p!g!WVWh!!3,X!!!'"huE`X,QH[%!!3,8!!!-$^]4?:s1eU7"93lO!!E7O!!!-$J,fQSs8E!!
#QOc'!=/W'!!*W0rVus0r;HZs&,cD,!?_+9!!+22rVus@nGWCg5N)M@!C,NA!!.SbrVutKJGoNLs+((K
!<<#u!<N3!!!*3"rVus$q#16q#P\9!!WWc#rVus0i;N]W+2IjU!C),6!!%NI!!*#t!!*,qrVus$nGWCg
#N5R]!?Zjk!!#7^!!%EF!!)fm!!(sU!!%QJ!.Y~>

%%EndBinary
grestore
np
f
3.0518e-5 .990631 1 .000396735 cmyk
%%IncludeResource: font Times-Roman
/NJDRFW+Times-Roman /Times-Roman findfont ct_VMDictPut
/NJDRFW+Times-Roman*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash 10{/.notdef}rp /colon 9{/.notdef}rp 
/D /.notdef /F 9{/.notdef}rp /P 16{/.notdef}rp /a /.notdef 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y 47{/.notdef}rp /quotesingle 
86{/.notdef}rp]
NJDRFW+Times-Roman nf
NJDRFW+Times-Roman*1 [12 0 0 -12 0 0 ]msf
40 560.228 mo
(Plea) false chp
60.6636 560.228 mo
(se) false chp
70.6594 560.228 mo
( purcha) false chp
106.311 560.228 mo
(se) false chp
116.307 560.228 mo
( \251docPrint PD) false chp
180.47 560.228 mo
(F Drive) false chp
217.466 560.228 mo
(r\251 on http://ww) false chp
287.629 560.228 mo
(w.ve) false chp
310.621 560.228 mo
(rypdf.com/a) false chp
368.94 560.228 mo
(rtprint/index.html to re) false chp
478.608 560.228 mo
(move this) false chp
525.611 560.228 mo
( mes) false chp
547.943 560.228 mo
(sa) false chp
557.939 560.228 mo
(ge.) false chp
1 lw
0 lc
0 lj
@
NJDRFS+Times-Roman*1 [12 0 0 -12 0 0 ]msf
169 -215.772 mo
(Trial ve) false chp
206.655 -215.772 mo
(rsion of D) false chp
255.315 -215.772 mo
(ocume) false chp
287.307 -215.772 mo
(nt Conve) false chp
330.974 -215.772 mo
(rter \(doc) false chp
371.954 -215.772 mo
(Print Pro\) v5.0) false chp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/NJDRFW+Times-Roman*1 uf
/NJDRFU+TimesNewRoman,BoldItalic*1 uf
/NJDRFU+TimesNewRoman,BoldItalic uf
/HIBBAA+TimesNewRoman,BoldItalic uf
/NJDRFV+TimesNewRoman,Italic*1 uf
/NJDRFV+TimesNewRoman,Italic uf
/QJJAAA+TimesNewRoman,Italic uf
/NJDRFS+Times-Roman*1 uf
/NJDRFT+TimesNewRoman*1 uf
/NJDRFT+TimesNewRoman uf
/PBAAAA+TimesNewRoman uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: font Times-Roman
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
